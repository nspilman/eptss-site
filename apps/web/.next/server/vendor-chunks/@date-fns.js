"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@date-fns";
exports.ids = ["vendor-chunks/@date-fns"];
exports.modules = {

/***/ "(rsc)/../../node_modules/@date-fns/tz/constants/index.js":
/*!**********************************************************!*\
  !*** ../../node_modules/@date-fns/tz/constants/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   constructFromSymbol: () => (/* binding */ constructFromSymbol)\n/* harmony export */ });\n/**\n * The symbol to access the `TZDate`'s function to construct a new instance from\n * the provided value. It helps date-fns to inherit the time zone.\n */\nconst constructFromSymbol = Symbol.for(\"constructDateFrom\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL0BkYXRlLWZucy90ei9jb25zdGFudHMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ08iLCJzb3VyY2VzIjpbIi9Vc2Vycy9uYXRlc3BpbG1hbi9SZXBvcy9FUFRTUy13ZWJzaXRlL2VwdHNzLXNpdGUvbm9kZV9tb2R1bGVzL0BkYXRlLWZucy90ei9jb25zdGFudHMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGUgc3ltYm9sIHRvIGFjY2VzcyB0aGUgYFRaRGF0ZWAncyBmdW5jdGlvbiB0byBjb25zdHJ1Y3QgYSBuZXcgaW5zdGFuY2UgZnJvbVxuICogdGhlIHByb3ZpZGVkIHZhbHVlLiBJdCBoZWxwcyBkYXRlLWZucyB0byBpbmhlcml0IHRoZSB0aW1lIHpvbmUuXG4gKi9cbmV4cG9ydCBjb25zdCBjb25zdHJ1Y3RGcm9tU3ltYm9sID0gU3ltYm9sLmZvcihcImNvbnN0cnVjdERhdGVGcm9tXCIpOyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/@date-fns/tz/constants/index.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/@date-fns/tz/date/index.js":
/*!*****************************************************!*\
  !*** ../../node_modules/@date-fns/tz/date/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TZDate: () => (/* binding */ TZDate)\n/* harmony export */ });\n/* harmony import */ var _tzName_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tzName/index.js */ \"(rsc)/../../node_modules/@date-fns/tz/tzName/index.js\");\n/* harmony import */ var _mini_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mini.js */ \"(rsc)/../../node_modules/@date-fns/tz/date/mini.js\");\n\n\nclass TZDate extends _mini_js__WEBPACK_IMPORTED_MODULE_1__.TZDateMini {\n  //#region static\n\n  static tz(tz, ...args) {\n    return args.length ? new TZDate(...args, tz) : new TZDate(Date.now(), tz);\n  }\n\n  //#endregion\n\n  //#region representation\n\n  toISOString() {\n    const [sign, hours, minutes] = this.tzComponents();\n    const tz = `${sign}${hours}:${minutes}`;\n    return this.internal.toISOString().slice(0, -1) + tz;\n  }\n  toString() {\n    // \"Tue Aug 13 2024 07:50:19 GMT+0800 (Singapore Standard Time)\";\n    return `${this.toDateString()} ${this.toTimeString()}`;\n  }\n  toDateString() {\n    // toUTCString returns RFC 7231 (\"Mon, 12 Aug 2024 23:36:08 GMT\")\n    const [day, date, month, year] = this.internal.toUTCString().split(\" \");\n    // \"Tue Aug 13 2024\"\n    return `${day?.slice(0, -1) /* Remove \",\" */} ${month} ${date} ${year}`;\n  }\n  toTimeString() {\n    // toUTCString returns RFC 7231 (\"Mon, 12 Aug 2024 23:36:08 GMT\")\n    const time = this.internal.toUTCString().split(\" \")[4];\n    const [sign, hours, minutes] = this.tzComponents();\n    // \"07:42:23 GMT+0800 (Singapore Standard Time)\"\n    return `${time} GMT${sign}${hours}${minutes} (${(0,_tzName_index_js__WEBPACK_IMPORTED_MODULE_0__.tzName)(this.timeZone, this)})`;\n  }\n  toLocaleString(locales, options) {\n    return Date.prototype.toLocaleString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n  toLocaleDateString(locales, options) {\n    return Date.prototype.toLocaleDateString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n  toLocaleTimeString(locales, options) {\n    return Date.prototype.toLocaleTimeString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n\n  //#endregion\n\n  //#region private\n\n  tzComponents() {\n    const offset = this.getTimezoneOffset();\n    const sign = offset > 0 ? \"-\" : \"+\";\n    const hours = String(Math.floor(Math.abs(offset) / 60)).padStart(2, \"0\");\n    const minutes = String(Math.abs(offset) % 60).padStart(2, \"0\");\n    return [sign, hours, minutes];\n  }\n\n  //#endregion\n\n  withTimeZone(timeZone) {\n    return new TZDate(+this, timeZone);\n  }\n\n  //#region date-fns integration\n\n  [Symbol.for(\"constructDateFrom\")](date) {\n    return new TZDate(+new Date(date), this.timeZone);\n  }\n\n  //#endregion\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL0BkYXRlLWZucy90ei9kYXRlL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE0QztBQUNMO0FBQ2hDLHFCQUFxQixnREFBVTtBQUN0Qzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQixLQUFLLEVBQUUsTUFBTSxHQUFHLFFBQVE7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHFCQUFxQixFQUFFLG9CQUFvQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxvQ0FBb0MsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLEtBQUs7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxNQUFNLEtBQUssS0FBSyxFQUFFLE1BQU0sRUFBRSxTQUFTLEdBQUcsd0RBQU0sc0JBQXNCO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL25hdGVzcGlsbWFuL1JlcG9zL0VQVFNTLXdlYnNpdGUvZXB0c3Mtc2l0ZS9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L2RhdGUvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdHpOYW1lIH0gZnJvbSBcIi4uL3R6TmFtZS9pbmRleC5qc1wiO1xuaW1wb3J0IHsgVFpEYXRlTWluaSB9IGZyb20gXCIuL21pbmkuanNcIjtcbmV4cG9ydCBjbGFzcyBUWkRhdGUgZXh0ZW5kcyBUWkRhdGVNaW5pIHtcbiAgLy8jcmVnaW9uIHN0YXRpY1xuXG4gIHN0YXRpYyB0eih0eiwgLi4uYXJncykge1xuICAgIHJldHVybiBhcmdzLmxlbmd0aCA/IG5ldyBUWkRhdGUoLi4uYXJncywgdHopIDogbmV3IFRaRGF0ZShEYXRlLm5vdygpLCB0eik7XG4gIH1cblxuICAvLyNlbmRyZWdpb25cblxuICAvLyNyZWdpb24gcmVwcmVzZW50YXRpb25cblxuICB0b0lTT1N0cmluZygpIHtcbiAgICBjb25zdCBbc2lnbiwgaG91cnMsIG1pbnV0ZXNdID0gdGhpcy50ekNvbXBvbmVudHMoKTtcbiAgICBjb25zdCB0eiA9IGAke3NpZ259JHtob3Vyc306JHttaW51dGVzfWA7XG4gICAgcmV0dXJuIHRoaXMuaW50ZXJuYWwudG9JU09TdHJpbmcoKS5zbGljZSgwLCAtMSkgKyB0ejtcbiAgfVxuICB0b1N0cmluZygpIHtcbiAgICAvLyBcIlR1ZSBBdWcgMTMgMjAyNCAwNzo1MDoxOSBHTVQrMDgwMCAoU2luZ2Fwb3JlIFN0YW5kYXJkIFRpbWUpXCI7XG4gICAgcmV0dXJuIGAke3RoaXMudG9EYXRlU3RyaW5nKCl9ICR7dGhpcy50b1RpbWVTdHJpbmcoKX1gO1xuICB9XG4gIHRvRGF0ZVN0cmluZygpIHtcbiAgICAvLyB0b1VUQ1N0cmluZyByZXR1cm5zIFJGQyA3MjMxIChcIk1vbiwgMTIgQXVnIDIwMjQgMjM6MzY6MDggR01UXCIpXG4gICAgY29uc3QgW2RheSwgZGF0ZSwgbW9udGgsIHllYXJdID0gdGhpcy5pbnRlcm5hbC50b1VUQ1N0cmluZygpLnNwbGl0KFwiIFwiKTtcbiAgICAvLyBcIlR1ZSBBdWcgMTMgMjAyNFwiXG4gICAgcmV0dXJuIGAke2RheT8uc2xpY2UoMCwgLTEpIC8qIFJlbW92ZSBcIixcIiAqL30gJHttb250aH0gJHtkYXRlfSAke3llYXJ9YDtcbiAgfVxuICB0b1RpbWVTdHJpbmcoKSB7XG4gICAgLy8gdG9VVENTdHJpbmcgcmV0dXJucyBSRkMgNzIzMSAoXCJNb24sIDEyIEF1ZyAyMDI0IDIzOjM2OjA4IEdNVFwiKVxuICAgIGNvbnN0IHRpbWUgPSB0aGlzLmludGVybmFsLnRvVVRDU3RyaW5nKCkuc3BsaXQoXCIgXCIpWzRdO1xuICAgIGNvbnN0IFtzaWduLCBob3VycywgbWludXRlc10gPSB0aGlzLnR6Q29tcG9uZW50cygpO1xuICAgIC8vIFwiMDc6NDI6MjMgR01UKzA4MDAgKFNpbmdhcG9yZSBTdGFuZGFyZCBUaW1lKVwiXG4gICAgcmV0dXJuIGAke3RpbWV9IEdNVCR7c2lnbn0ke2hvdXJzfSR7bWludXRlc30gKCR7dHpOYW1lKHRoaXMudGltZVpvbmUsIHRoaXMpfSlgO1xuICB9XG4gIHRvTG9jYWxlU3RyaW5nKGxvY2FsZXMsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gRGF0ZS5wcm90b3R5cGUudG9Mb2NhbGVTdHJpbmcuY2FsbCh0aGlzLCBsb2NhbGVzLCB7XG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgdGltZVpvbmU6IG9wdGlvbnM/LnRpbWVab25lIHx8IHRoaXMudGltZVpvbmVcbiAgICB9KTtcbiAgfVxuICB0b0xvY2FsZURhdGVTdHJpbmcobG9jYWxlcywgb3B0aW9ucykge1xuICAgIHJldHVybiBEYXRlLnByb3RvdHlwZS50b0xvY2FsZURhdGVTdHJpbmcuY2FsbCh0aGlzLCBsb2NhbGVzLCB7XG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgdGltZVpvbmU6IG9wdGlvbnM/LnRpbWVab25lIHx8IHRoaXMudGltZVpvbmVcbiAgICB9KTtcbiAgfVxuICB0b0xvY2FsZVRpbWVTdHJpbmcobG9jYWxlcywgb3B0aW9ucykge1xuICAgIHJldHVybiBEYXRlLnByb3RvdHlwZS50b0xvY2FsZVRpbWVTdHJpbmcuY2FsbCh0aGlzLCBsb2NhbGVzLCB7XG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgdGltZVpvbmU6IG9wdGlvbnM/LnRpbWVab25lIHx8IHRoaXMudGltZVpvbmVcbiAgICB9KTtcbiAgfVxuXG4gIC8vI2VuZHJlZ2lvblxuXG4gIC8vI3JlZ2lvbiBwcml2YXRlXG5cbiAgdHpDb21wb25lbnRzKCkge1xuICAgIGNvbnN0IG9mZnNldCA9IHRoaXMuZ2V0VGltZXpvbmVPZmZzZXQoKTtcbiAgICBjb25zdCBzaWduID0gb2Zmc2V0ID4gMCA/IFwiLVwiIDogXCIrXCI7XG4gICAgY29uc3QgaG91cnMgPSBTdHJpbmcoTWF0aC5mbG9vcihNYXRoLmFicyhvZmZzZXQpIC8gNjApKS5wYWRTdGFydCgyLCBcIjBcIik7XG4gICAgY29uc3QgbWludXRlcyA9IFN0cmluZyhNYXRoLmFicyhvZmZzZXQpICUgNjApLnBhZFN0YXJ0KDIsIFwiMFwiKTtcbiAgICByZXR1cm4gW3NpZ24sIGhvdXJzLCBtaW51dGVzXTtcbiAgfVxuXG4gIC8vI2VuZHJlZ2lvblxuXG4gIHdpdGhUaW1lWm9uZSh0aW1lWm9uZSkge1xuICAgIHJldHVybiBuZXcgVFpEYXRlKCt0aGlzLCB0aW1lWm9uZSk7XG4gIH1cblxuICAvLyNyZWdpb24gZGF0ZS1mbnMgaW50ZWdyYXRpb25cblxuICBbU3ltYm9sLmZvcihcImNvbnN0cnVjdERhdGVGcm9tXCIpXShkYXRlKSB7XG4gICAgcmV0dXJuIG5ldyBUWkRhdGUoK25ldyBEYXRlKGRhdGUpLCB0aGlzLnRpbWVab25lKTtcbiAgfVxuXG4gIC8vI2VuZHJlZ2lvblxufSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/@date-fns/tz/date/index.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/@date-fns/tz/date/mini.js":
/*!****************************************************!*\
  !*** ../../node_modules/@date-fns/tz/date/mini.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TZDateMini: () => (/* binding */ TZDateMini)\n/* harmony export */ });\n/* harmony import */ var _tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tzOffset/index.js */ \"(rsc)/../../node_modules/@date-fns/tz/tzOffset/index.js\");\n\nclass TZDateMini extends Date {\n  //#region static\n\n  constructor(...args) {\n    super();\n    if (args.length > 1 && typeof args[args.length - 1] === \"string\") {\n      this.timeZone = args.pop();\n    }\n    this.internal = new Date();\n    if (isNaN((0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(this.timeZone, this))) {\n      this.setTime(NaN);\n    } else {\n      if (!args.length) {\n        this.setTime(Date.now());\n      } else if (typeof args[0] === \"number\" && (args.length === 1 || args.length === 2 && typeof args[1] !== \"number\")) {\n        this.setTime(args[0]);\n      } else if (typeof args[0] === \"string\") {\n        this.setTime(+new Date(args[0]));\n      } else if (args[0] instanceof Date) {\n        this.setTime(+args[0]);\n      } else {\n        this.setTime(+new Date(...args));\n        adjustToSystemTZ(this, NaN);\n        syncToInternal(this);\n      }\n    }\n  }\n  static tz(tz, ...args) {\n    return args.length ? new TZDateMini(...args, tz) : new TZDateMini(Date.now(), tz);\n  }\n\n  //#endregion\n\n  //#region time zone\n\n  withTimeZone(timeZone) {\n    return new TZDateMini(+this, timeZone);\n  }\n  getTimezoneOffset() {\n    const offset = -(0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(this.timeZone, this);\n    // Remove the seconds offset\n    // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\n    return offset > 0 ? Math.floor(offset) : Math.ceil(offset);\n  }\n\n  //#endregion\n\n  //#region time\n\n  setTime(time) {\n    Date.prototype.setTime.apply(this, arguments);\n    syncToInternal(this);\n    return +this;\n  }\n\n  //#endregion\n\n  //#region date-fns integration\n\n  [Symbol.for(\"constructDateFrom\")](date) {\n    return new TZDateMini(+new Date(date), this.timeZone);\n  }\n\n  //#endregion\n}\n\n// Assign getters and setters\nconst re = /^(get|set)(?!UTC)/;\nObject.getOwnPropertyNames(Date.prototype).forEach(method => {\n  if (!re.test(method)) return;\n  const utcMethod = method.replace(re, \"$1UTC\");\n  // Filter out methods without UTC counterparts\n  if (!TZDateMini.prototype[utcMethod]) return;\n  if (method.startsWith(\"get\")) {\n    // Delegate to internal date's UTC method\n    TZDateMini.prototype[method] = function () {\n      return this.internal[utcMethod]();\n    };\n  } else {\n    // Assign regular setter\n    TZDateMini.prototype[method] = function () {\n      Date.prototype[utcMethod].apply(this.internal, arguments);\n      syncFromInternal(this);\n      return +this;\n    };\n\n    // Assign UTC setter\n    TZDateMini.prototype[utcMethod] = function () {\n      Date.prototype[utcMethod].apply(this, arguments);\n      syncToInternal(this);\n      return +this;\n    };\n  }\n});\n\n/**\n * Function syncs time to internal date, applying the time zone offset.\n *\n * @param {Date} date - Date to sync\n */\nfunction syncToInternal(date) {\n  date.internal.setTime(+date);\n  date.internal.setUTCSeconds(date.internal.getUTCSeconds() - Math.round(-(0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(date.timeZone, date) * 60));\n}\n\n/**\n * Function syncs the internal date UTC values to the date. It allows to get\n * accurate timestamp value.\n *\n * @param {Date} date - The date to sync\n */\nfunction syncFromInternal(date) {\n  // First we transpose the internal values\n  Date.prototype.setFullYear.call(date, date.internal.getUTCFullYear(), date.internal.getUTCMonth(), date.internal.getUTCDate());\n  Date.prototype.setHours.call(date, date.internal.getUTCHours(), date.internal.getUTCMinutes(), date.internal.getUTCSeconds(), date.internal.getUTCMilliseconds());\n\n  // Now we have to adjust the date to the system time zone\n  adjustToSystemTZ(date);\n}\n\n/**\n * Function adjusts the date to the system time zone. It uses the time zone\n * differences to calculate the offset and adjust the date.\n *\n * @param {Date} date - Date to adjust\n */\nfunction adjustToSystemTZ(date) {\n  // Save the time zone offset before all the adjustments\n  const baseOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(date.timeZone, date);\n  // Remove the seconds offset\n  // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\n  const offset = baseOffset > 0 ? Math.floor(baseOffset) : Math.ceil(baseOffset);\n  //#region System DST adjustment\n\n  // The biggest problem with using the system time zone is that when we create\n  // a date from internal values stored in UTC, the system time zone might end\n  // up on the DST hour:\n  //\n  //   $ TZ=America/New_York node\n  //   > new Date(2020, 2, 8, 1).toString()\n  //   'Sun Mar 08 2020 01:00:00 GMT-0500 (Eastern Standard Time)'\n  //   > new Date(2020, 2, 8, 2).toString()\n  //   'Sun Mar 08 2020 03:00:00 GMT-0400 (Eastern Daylight Time)'\n  //   > new Date(2020, 2, 8, 3).toString()\n  //   'Sun Mar 08 2020 03:00:00 GMT-0400 (Eastern Daylight Time)'\n  //   > new Date(2020, 2, 8, 4).toString()\n  //   'Sun Mar 08 2020 04:00:00 GMT-0400 (Eastern Daylight Time)'\n  //\n  // Here we get the same hour for both 2 and 3, because the system time zone\n  // has DST beginning at 8 March 2020, 2 a.m. and jumps to 3 a.m. So we have\n  // to adjust the internal date to reflect that.\n  //\n  // However we want to adjust only if that's the DST hour the change happenes,\n  // not the hour where DST moves to.\n\n  // We calculate the previous hour to see if the time zone offset has changed\n  // and we have landed on the DST hour.\n  const prevHour = new Date(+date);\n  // We use UTC methods here as we don't want to land on the same hour again\n  // in case of DST.\n  prevHour.setUTCHours(prevHour.getUTCHours() - 1);\n\n  // Calculate if we are on the system DST hour.\n  const systemOffset = -new Date(+date).getTimezoneOffset();\n  const prevHourSystemOffset = -new Date(+prevHour).getTimezoneOffset();\n  const systemDSTChange = systemOffset - prevHourSystemOffset;\n  // Detect the DST shift. System DST change will occur both on\n  const dstShift = Date.prototype.getHours.apply(date) !== date.internal.getUTCHours();\n\n  // Move the internal date when we are on the system DST hour.\n  if (systemDSTChange && dstShift) date.internal.setUTCMinutes(date.internal.getUTCMinutes() + systemDSTChange);\n\n  //#endregion\n\n  //#region System diff adjustment\n\n  // Now we need to adjust the date, since we just applied internal values.\n  // We need to calculate the difference between the system and date time zones\n  // and apply it to the date.\n\n  const offsetDiff = systemOffset - offset;\n  if (offsetDiff) Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + offsetDiff);\n\n  //#endregion\n\n  //#region Seconds System diff adjustment\n\n  const systemDate = new Date(+date);\n  // Set the UTC seconds to 0 to isolate the timezone offset in seconds.\n  systemDate.setUTCSeconds(0);\n  // For negative systemOffset, invert the seconds.\n  const systemSecondsOffset = systemOffset > 0 ? systemDate.getSeconds() : (systemDate.getSeconds() - 60) % 60;\n\n  // Calculate the seconds offset based on the timezone offset.\n  const secondsOffset = Math.round(-((0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(date.timeZone, date) * 60)) % 60;\n  if (secondsOffset || systemSecondsOffset) {\n    date.internal.setUTCSeconds(date.internal.getUTCSeconds() + secondsOffset);\n    Date.prototype.setUTCSeconds.call(date, Date.prototype.getUTCSeconds.call(date) + secondsOffset + systemSecondsOffset);\n  }\n\n  //#endregion\n\n  //#region Post-adjustment DST fix\n\n  const postBaseOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(date.timeZone, date);\n  // Remove the seconds offset\n  // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\n  const postOffset = postBaseOffset > 0 ? Math.floor(postBaseOffset) : Math.ceil(postBaseOffset);\n  const postSystemOffset = -new Date(+date).getTimezoneOffset();\n  const postOffsetDiff = postSystemOffset - postOffset;\n  const offsetChanged = postOffset !== offset;\n  const postDiff = postOffsetDiff - offsetDiff;\n  if (offsetChanged && postDiff) {\n    Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + postDiff);\n\n    // Now we need to check if got offset change during the post-adjustment.\n    // If so, we also need both dates to reflect that.\n\n    const newBaseOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(date.timeZone, date);\n    // Remove the seconds offset\n    // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\n    const newOffset = newBaseOffset > 0 ? Math.floor(newBaseOffset) : Math.ceil(newBaseOffset);\n    const offsetChange = postOffset - newOffset;\n    if (offsetChange) {\n      date.internal.setUTCMinutes(date.internal.getUTCMinutes() + offsetChange);\n      Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + offsetChange);\n    }\n  }\n\n  //#endregion\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/@date-fns/tz/date/mini.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/@date-fns/tz/index.js":
/*!************************************************!*\
  !*** ../../node_modules/@date-fns/tz/index.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TZDate: () => (/* reexport safe */ _date_index_js__WEBPACK_IMPORTED_MODULE_1__.TZDate),\n/* harmony export */   TZDateMini: () => (/* reexport safe */ _date_mini_js__WEBPACK_IMPORTED_MODULE_2__.TZDateMini),\n/* harmony export */   constructFromSymbol: () => (/* reexport safe */ _constants_index_js__WEBPACK_IMPORTED_MODULE_0__.constructFromSymbol),\n/* harmony export */   tz: () => (/* reexport safe */ _tz_index_js__WEBPACK_IMPORTED_MODULE_3__.tz),\n/* harmony export */   tzName: () => (/* reexport safe */ _tzName_index_js__WEBPACK_IMPORTED_MODULE_6__.tzName),\n/* harmony export */   tzOffset: () => (/* reexport safe */ _tzOffset_index_js__WEBPACK_IMPORTED_MODULE_4__.tzOffset),\n/* harmony export */   tzScan: () => (/* reexport safe */ _tzScan_index_js__WEBPACK_IMPORTED_MODULE_5__.tzScan)\n/* harmony export */ });\n/* harmony import */ var _constants_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants/index.js */ \"(rsc)/../../node_modules/@date-fns/tz/constants/index.js\");\n/* harmony import */ var _date_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./date/index.js */ \"(rsc)/../../node_modules/@date-fns/tz/date/index.js\");\n/* harmony import */ var _date_mini_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./date/mini.js */ \"(rsc)/../../node_modules/@date-fns/tz/date/mini.js\");\n/* harmony import */ var _tz_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tz/index.js */ \"(rsc)/../../node_modules/@date-fns/tz/tz/index.js\");\n/* harmony import */ var _tzOffset_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tzOffset/index.js */ \"(rsc)/../../node_modules/@date-fns/tz/tzOffset/index.js\");\n/* harmony import */ var _tzScan_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tzScan/index.js */ \"(rsc)/../../node_modules/@date-fns/tz/tzScan/index.js\");\n/* harmony import */ var _tzName_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tzName/index.js */ \"(rsc)/../../node_modules/@date-fns/tz/tzName/index.js\");\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL0BkYXRlLWZucy90ei9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFxQztBQUNMO0FBQ0Q7QUFDRDtBQUNNO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9uYXRlc3BpbG1hbi9SZXBvcy9FUFRTUy13ZWJzaXRlL2VwdHNzLXNpdGUvbm9kZV9tb2R1bGVzL0BkYXRlLWZucy90ei9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9jb25zdGFudHMvaW5kZXguanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2RhdGUvaW5kZXguanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2RhdGUvbWluaS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdHovaW5kZXguanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3R6T2Zmc2V0L2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi90elNjYW4vaW5kZXguanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3R6TmFtZS9pbmRleC5qc1wiOyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/@date-fns/tz/index.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/@date-fns/tz/tz/index.js":
/*!***************************************************!*\
  !*** ../../node_modules/@date-fns/tz/tz/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tz: () => (/* binding */ tz)\n/* harmony export */ });\n/* harmony import */ var _date_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../date/index.js */ \"(rsc)/../../node_modules/@date-fns/tz/date/index.js\");\n\n\n/**\n * The function creates accepts a time zone and returns a function that creates\n * a new `TZDate` instance in the time zone from the provided value. Use it to\n * provide the context for the date-fns functions, via the `in` option.\n *\n * @param timeZone - Time zone name (IANA or UTC offset)\n *\n * @returns Function that creates a new `TZDate` instance in the time zone\n */\nconst tz = timeZone => value => _date_index_js__WEBPACK_IMPORTED_MODULE_0__.TZDate.tz(timeZone, +new Date(value));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL0BkYXRlLWZucy90ei90ei9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwQzs7QUFFMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZ0NBQWdDLGtEQUFNIiwic291cmNlcyI6WyIvVXNlcnMvbmF0ZXNwaWxtYW4vUmVwb3MvRVBUU1Mtd2Vic2l0ZS9lcHRzcy1zaXRlL25vZGVfbW9kdWxlcy9AZGF0ZS1mbnMvdHovdHovaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVFpEYXRlIH0gZnJvbSBcIi4uL2RhdGUvaW5kZXguanNcIjtcblxuLyoqXG4gKiBUaGUgZnVuY3Rpb24gY3JlYXRlcyBhY2NlcHRzIGEgdGltZSB6b25lIGFuZCByZXR1cm5zIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzXG4gKiBhIG5ldyBgVFpEYXRlYCBpbnN0YW5jZSBpbiB0aGUgdGltZSB6b25lIGZyb20gdGhlIHByb3ZpZGVkIHZhbHVlLiBVc2UgaXQgdG9cbiAqIHByb3ZpZGUgdGhlIGNvbnRleHQgZm9yIHRoZSBkYXRlLWZucyBmdW5jdGlvbnMsIHZpYSB0aGUgYGluYCBvcHRpb24uXG4gKlxuICogQHBhcmFtIHRpbWVab25lIC0gVGltZSB6b25lIG5hbWUgKElBTkEgb3IgVVRDIG9mZnNldClcbiAqXG4gKiBAcmV0dXJucyBGdW5jdGlvbiB0aGF0IGNyZWF0ZXMgYSBuZXcgYFRaRGF0ZWAgaW5zdGFuY2UgaW4gdGhlIHRpbWUgem9uZVxuICovXG5leHBvcnQgY29uc3QgdHogPSB0aW1lWm9uZSA9PiB2YWx1ZSA9PiBUWkRhdGUudHoodGltZVpvbmUsICtuZXcgRGF0ZSh2YWx1ZSkpOyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/@date-fns/tz/tz/index.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/@date-fns/tz/tzName/index.js":
/*!*******************************************************!*\
  !*** ../../node_modules/@date-fns/tz/tzName/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tzName: () => (/* binding */ tzName)\n/* harmony export */ });\n/**\n * Time zone name format.\n */\n\n/**\n * The function returns the time zone name for the given date in the specified\n * time zone.\n *\n * It uses the `Intl.DateTimeFormat` API and by default outputs the time zone\n * name in a long format, e.g. \"Pacific Standard Time\" or\n * \"Singapore Standard Time\".\n *\n * It is possible to specify the format as the third argument using one of the following options\n *\n * - \"short\": e.g. \"EDT\" or \"GMT+8\".\n * - \"long\": e.g. \"Eastern Daylight Time\".\n * - \"shortGeneric\": e.g. \"ET\" or \"Singapore Time\".\n * - \"longGeneric\": e.g. \"Eastern Time\" or \"Singapore Standard Time\".\n *\n * These options correspond to TR35 tokens `z..zzz`, `zzzz`, `v`, and `vvvv` respectively: https://www.unicode.org/reports/tr35/tr35-dates.html#dfst-zone\n *\n * @param timeZone - Time zone name (IANA or UTC offset)\n * @param date - Date object to get the time zone name for\n * @param format - Optional format of the time zone name. Defaults to \"long\". Can be \"short\", \"long\", \"shortGeneric\", or \"longGeneric\".\n *\n * @returns Time zone name (e.g. \"Singapore Standard Time\")\n */\nfunction tzName(timeZone, date, format = \"long\") {\n  return new Intl.DateTimeFormat(\"en-US\", {\n    // Enforces engine to render the time. Without the option JavaScriptCore omits it.\n    hour: \"numeric\",\n    timeZone: timeZone,\n    timeZoneName: format\n  }).format(date).split(/\\s/g) // Format.JS uses non-breaking spaces\n  .slice(2) // Skip the hour and AM/PM parts\n  .join(\" \");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL0BkYXRlLWZucy90ei90ek5hbWUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL25hdGVzcGlsbWFuL1JlcG9zL0VQVFNTLXdlYnNpdGUvZXB0c3Mtc2l0ZS9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L3R6TmFtZS9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRpbWUgem9uZSBuYW1lIGZvcm1hdC5cbiAqL1xuXG4vKipcbiAqIFRoZSBmdW5jdGlvbiByZXR1cm5zIHRoZSB0aW1lIHpvbmUgbmFtZSBmb3IgdGhlIGdpdmVuIGRhdGUgaW4gdGhlIHNwZWNpZmllZFxuICogdGltZSB6b25lLlxuICpcbiAqIEl0IHVzZXMgdGhlIGBJbnRsLkRhdGVUaW1lRm9ybWF0YCBBUEkgYW5kIGJ5IGRlZmF1bHQgb3V0cHV0cyB0aGUgdGltZSB6b25lXG4gKiBuYW1lIGluIGEgbG9uZyBmb3JtYXQsIGUuZy4gXCJQYWNpZmljIFN0YW5kYXJkIFRpbWVcIiBvclxuICogXCJTaW5nYXBvcmUgU3RhbmRhcmQgVGltZVwiLlxuICpcbiAqIEl0IGlzIHBvc3NpYmxlIHRvIHNwZWNpZnkgdGhlIGZvcm1hdCBhcyB0aGUgdGhpcmQgYXJndW1lbnQgdXNpbmcgb25lIG9mIHRoZSBmb2xsb3dpbmcgb3B0aW9uc1xuICpcbiAqIC0gXCJzaG9ydFwiOiBlLmcuIFwiRURUXCIgb3IgXCJHTVQrOFwiLlxuICogLSBcImxvbmdcIjogZS5nLiBcIkVhc3Rlcm4gRGF5bGlnaHQgVGltZVwiLlxuICogLSBcInNob3J0R2VuZXJpY1wiOiBlLmcuIFwiRVRcIiBvciBcIlNpbmdhcG9yZSBUaW1lXCIuXG4gKiAtIFwibG9uZ0dlbmVyaWNcIjogZS5nLiBcIkVhc3Rlcm4gVGltZVwiIG9yIFwiU2luZ2Fwb3JlIFN0YW5kYXJkIFRpbWVcIi5cbiAqXG4gKiBUaGVzZSBvcHRpb25zIGNvcnJlc3BvbmQgdG8gVFIzNSB0b2tlbnMgYHouLnp6emAsIGB6enp6YCwgYHZgLCBhbmQgYHZ2dnZgIHJlc3BlY3RpdmVseTogaHR0cHM6Ly93d3cudW5pY29kZS5vcmcvcmVwb3J0cy90cjM1L3RyMzUtZGF0ZXMuaHRtbCNkZnN0LXpvbmVcbiAqXG4gKiBAcGFyYW0gdGltZVpvbmUgLSBUaW1lIHpvbmUgbmFtZSAoSUFOQSBvciBVVEMgb2Zmc2V0KVxuICogQHBhcmFtIGRhdGUgLSBEYXRlIG9iamVjdCB0byBnZXQgdGhlIHRpbWUgem9uZSBuYW1lIGZvclxuICogQHBhcmFtIGZvcm1hdCAtIE9wdGlvbmFsIGZvcm1hdCBvZiB0aGUgdGltZSB6b25lIG5hbWUuIERlZmF1bHRzIHRvIFwibG9uZ1wiLiBDYW4gYmUgXCJzaG9ydFwiLCBcImxvbmdcIiwgXCJzaG9ydEdlbmVyaWNcIiwgb3IgXCJsb25nR2VuZXJpY1wiLlxuICpcbiAqIEByZXR1cm5zIFRpbWUgem9uZSBuYW1lIChlLmcuIFwiU2luZ2Fwb3JlIFN0YW5kYXJkIFRpbWVcIilcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHR6TmFtZSh0aW1lWm9uZSwgZGF0ZSwgZm9ybWF0ID0gXCJsb25nXCIpIHtcbiAgcmV0dXJuIG5ldyBJbnRsLkRhdGVUaW1lRm9ybWF0KFwiZW4tVVNcIiwge1xuICAgIC8vIEVuZm9yY2VzIGVuZ2luZSB0byByZW5kZXIgdGhlIHRpbWUuIFdpdGhvdXQgdGhlIG9wdGlvbiBKYXZhU2NyaXB0Q29yZSBvbWl0cyBpdC5cbiAgICBob3VyOiBcIm51bWVyaWNcIixcbiAgICB0aW1lWm9uZTogdGltZVpvbmUsXG4gICAgdGltZVpvbmVOYW1lOiBmb3JtYXRcbiAgfSkuZm9ybWF0KGRhdGUpLnNwbGl0KC9cXHMvZykgLy8gRm9ybWF0LkpTIHVzZXMgbm9uLWJyZWFraW5nIHNwYWNlc1xuICAuc2xpY2UoMikgLy8gU2tpcCB0aGUgaG91ciBhbmQgQU0vUE0gcGFydHNcbiAgLmpvaW4oXCIgXCIpO1xufSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/@date-fns/tz/tzName/index.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/@date-fns/tz/tzOffset/index.js":
/*!*********************************************************!*\
  !*** ../../node_modules/@date-fns/tz/tzOffset/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tzOffset: () => (/* binding */ tzOffset)\n/* harmony export */ });\nconst offsetFormatCache = {};\nconst offsetCache = {};\n\n/**\n * The function extracts UTC offset in minutes from the given date in specified\n * time zone.\n *\n * Unlike `Date.prototype.getTimezoneOffset`, this function returns the value\n * mirrored to the sign of the offset in the time zone. For Asia/Singapore\n * (UTC+8), `tzOffset` returns 480, while `getTimezoneOffset` returns -480.\n *\n * @param timeZone - Time zone name (IANA or UTC offset)\n * @param date - Date to check the offset for\n *\n * @returns UTC offset in minutes\n */\nfunction tzOffset(timeZone, date) {\n  try {\n    const format = offsetFormatCache[timeZone] ||= new Intl.DateTimeFormat(\"en-US\", {\n      timeZone,\n      timeZoneName: \"longOffset\"\n    }).format;\n    const offsetStr = format(date).split(\"GMT\")[1];\n    if (offsetStr in offsetCache) return offsetCache[offsetStr];\n    return calcOffset(offsetStr, offsetStr.split(\":\"));\n  } catch {\n    // Fallback to manual parsing if the runtime doesn't support ±HH:MM/±HHMM/±HH\n    // See: https://github.com/nodejs/node/issues/53419\n    if (timeZone in offsetCache) return offsetCache[timeZone];\n    const captures = timeZone?.match(offsetRe);\n    if (captures) return calcOffset(timeZone, captures.slice(1));\n    return NaN;\n  }\n}\nconst offsetRe = /([+-]\\d\\d):?(\\d\\d)?/;\nfunction calcOffset(cacheStr, values) {\n  const hours = +(values[0] || 0);\n  const minutes = +(values[1] || 0);\n  // Convert seconds to minutes by dividing by 60 to keep the function return in minutes.\n  const seconds = +(values[2] || 0) / 60;\n  return offsetCache[cacheStr] = hours * 60 + minutes > 0 ? hours * 60 + minutes + seconds : hours * 60 - minutes - seconds;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL0BkYXRlLWZucy90ei90ek9mZnNldC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvbmF0ZXNwaWxtYW4vUmVwb3MvRVBUU1Mtd2Vic2l0ZS9lcHRzcy1zaXRlL25vZGVfbW9kdWxlcy9AZGF0ZS1mbnMvdHovdHpPZmZzZXQvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgb2Zmc2V0Rm9ybWF0Q2FjaGUgPSB7fTtcbmNvbnN0IG9mZnNldENhY2hlID0ge307XG5cbi8qKlxuICogVGhlIGZ1bmN0aW9uIGV4dHJhY3RzIFVUQyBvZmZzZXQgaW4gbWludXRlcyBmcm9tIHRoZSBnaXZlbiBkYXRlIGluIHNwZWNpZmllZFxuICogdGltZSB6b25lLlxuICpcbiAqIFVubGlrZSBgRGF0ZS5wcm90b3R5cGUuZ2V0VGltZXpvbmVPZmZzZXRgLCB0aGlzIGZ1bmN0aW9uIHJldHVybnMgdGhlIHZhbHVlXG4gKiBtaXJyb3JlZCB0byB0aGUgc2lnbiBvZiB0aGUgb2Zmc2V0IGluIHRoZSB0aW1lIHpvbmUuIEZvciBBc2lhL1NpbmdhcG9yZVxuICogKFVUQys4KSwgYHR6T2Zmc2V0YCByZXR1cm5zIDQ4MCwgd2hpbGUgYGdldFRpbWV6b25lT2Zmc2V0YCByZXR1cm5zIC00ODAuXG4gKlxuICogQHBhcmFtIHRpbWVab25lIC0gVGltZSB6b25lIG5hbWUgKElBTkEgb3IgVVRDIG9mZnNldClcbiAqIEBwYXJhbSBkYXRlIC0gRGF0ZSB0byBjaGVjayB0aGUgb2Zmc2V0IGZvclxuICpcbiAqIEByZXR1cm5zIFVUQyBvZmZzZXQgaW4gbWludXRlc1xuICovXG5leHBvcnQgZnVuY3Rpb24gdHpPZmZzZXQodGltZVpvbmUsIGRhdGUpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBmb3JtYXQgPSBvZmZzZXRGb3JtYXRDYWNoZVt0aW1lWm9uZV0gfHw9IG5ldyBJbnRsLkRhdGVUaW1lRm9ybWF0KFwiZW4tVVNcIiwge1xuICAgICAgdGltZVpvbmUsXG4gICAgICB0aW1lWm9uZU5hbWU6IFwibG9uZ09mZnNldFwiXG4gICAgfSkuZm9ybWF0O1xuICAgIGNvbnN0IG9mZnNldFN0ciA9IGZvcm1hdChkYXRlKS5zcGxpdChcIkdNVFwiKVsxXTtcbiAgICBpZiAob2Zmc2V0U3RyIGluIG9mZnNldENhY2hlKSByZXR1cm4gb2Zmc2V0Q2FjaGVbb2Zmc2V0U3RyXTtcbiAgICByZXR1cm4gY2FsY09mZnNldChvZmZzZXRTdHIsIG9mZnNldFN0ci5zcGxpdChcIjpcIikpO1xuICB9IGNhdGNoIHtcbiAgICAvLyBGYWxsYmFjayB0byBtYW51YWwgcGFyc2luZyBpZiB0aGUgcnVudGltZSBkb2Vzbid0IHN1cHBvcnQgwrFISDpNTS/CsUhITU0vwrFISFxuICAgIC8vIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL25vZGVqcy9ub2RlL2lzc3Vlcy81MzQxOVxuICAgIGlmICh0aW1lWm9uZSBpbiBvZmZzZXRDYWNoZSkgcmV0dXJuIG9mZnNldENhY2hlW3RpbWVab25lXTtcbiAgICBjb25zdCBjYXB0dXJlcyA9IHRpbWVab25lPy5tYXRjaChvZmZzZXRSZSk7XG4gICAgaWYgKGNhcHR1cmVzKSByZXR1cm4gY2FsY09mZnNldCh0aW1lWm9uZSwgY2FwdHVyZXMuc2xpY2UoMSkpO1xuICAgIHJldHVybiBOYU47XG4gIH1cbn1cbmNvbnN0IG9mZnNldFJlID0gLyhbKy1dXFxkXFxkKTo/KFxcZFxcZCk/LztcbmZ1bmN0aW9uIGNhbGNPZmZzZXQoY2FjaGVTdHIsIHZhbHVlcykge1xuICBjb25zdCBob3VycyA9ICsodmFsdWVzWzBdIHx8IDApO1xuICBjb25zdCBtaW51dGVzID0gKyh2YWx1ZXNbMV0gfHwgMCk7XG4gIC8vIENvbnZlcnQgc2Vjb25kcyB0byBtaW51dGVzIGJ5IGRpdmlkaW5nIGJ5IDYwIHRvIGtlZXAgdGhlIGZ1bmN0aW9uIHJldHVybiBpbiBtaW51dGVzLlxuICBjb25zdCBzZWNvbmRzID0gKyh2YWx1ZXNbMl0gfHwgMCkgLyA2MDtcbiAgcmV0dXJuIG9mZnNldENhY2hlW2NhY2hlU3RyXSA9IGhvdXJzICogNjAgKyBtaW51dGVzID4gMCA/IGhvdXJzICogNjAgKyBtaW51dGVzICsgc2Vjb25kcyA6IGhvdXJzICogNjAgLSBtaW51dGVzIC0gc2Vjb25kcztcbn0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/@date-fns/tz/tzOffset/index.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/@date-fns/tz/tzScan/index.js":
/*!*******************************************************!*\
  !*** ../../node_modules/@date-fns/tz/tzScan/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tzScan: () => (/* binding */ tzScan)\n/* harmony export */ });\n/* harmony import */ var _tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tzOffset/index.js */ \"(rsc)/../../node_modules/@date-fns/tz/tzOffset/index.js\");\n\n\n/**\n * Time interval.\n */\n\n/**\n * Time zone change record.\n */\n\n/**\n * The function scans the time zone for changes in the given interval.\n *\n * @param timeZone - Time zone name (IANA or UTC offset)\n * @param interval - Time interval to scan for changes\n *\n * @returns Array of time zone changes\n */\nfunction tzScan(timeZone, interval) {\n  const changes = [];\n  const monthDate = new Date(interval.start);\n  monthDate.setUTCSeconds(0, 0);\n  const endDate = new Date(interval.end);\n  endDate.setUTCSeconds(0, 0);\n  const endMonthTime = +endDate;\n  let lastOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, monthDate);\n  while (+monthDate < endMonthTime) {\n    // Month forward\n    monthDate.setUTCMonth(monthDate.getUTCMonth() + 1);\n\n    // Find the month where the offset changes\n    const offset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, monthDate);\n    if (offset != lastOffset) {\n      // Rewind a month back to find the day where the offset changes\n      const dayDate = new Date(monthDate);\n      dayDate.setUTCMonth(dayDate.getUTCMonth() - 1);\n      const endDayTime = +monthDate;\n      lastOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, dayDate);\n      while (+dayDate < endDayTime) {\n        // Day forward\n        dayDate.setUTCDate(dayDate.getUTCDate() + 1);\n\n        // Find the day where the offset changes\n        const offset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, dayDate);\n        if (offset != lastOffset) {\n          // Rewind a day back to find the time where the offset changes\n          const hourDate = new Date(dayDate);\n          hourDate.setUTCDate(hourDate.getUTCDate() - 1);\n          const endHourTime = +dayDate;\n          lastOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, hourDate);\n          while (+hourDate < endHourTime) {\n            // Hour forward\n            hourDate.setUTCHours(hourDate.getUTCHours() + 1);\n\n            // Find the hour where the offset changes\n            const hourOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, hourDate);\n            if (hourOffset !== lastOffset) {\n              changes.push({\n                date: new Date(hourDate),\n                change: hourOffset - lastOffset,\n                offset: hourOffset\n              });\n            }\n            lastOffset = hourOffset;\n          }\n        }\n        lastOffset = offset;\n      }\n    }\n    lastOffset = offset;\n  }\n  return changes;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL0BkYXRlLWZucy90ei90elNjYW4vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0Q7O0FBRWhEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDREQUFRO0FBQzNCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1CQUFtQiw0REFBUTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDREQUFRO0FBQzNCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHVCQUF1Qiw0REFBUTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDREQUFRO0FBQy9CO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLCtCQUErQiw0REFBUTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9uYXRlc3BpbG1hbi9SZXBvcy9FUFRTUy13ZWJzaXRlL2VwdHNzLXNpdGUvbm9kZV9tb2R1bGVzL0BkYXRlLWZucy90ei90elNjYW4vaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdHpPZmZzZXQgfSBmcm9tIFwiLi4vdHpPZmZzZXQvaW5kZXguanNcIjtcblxuLyoqXG4gKiBUaW1lIGludGVydmFsLlxuICovXG5cbi8qKlxuICogVGltZSB6b25lIGNoYW5nZSByZWNvcmQuXG4gKi9cblxuLyoqXG4gKiBUaGUgZnVuY3Rpb24gc2NhbnMgdGhlIHRpbWUgem9uZSBmb3IgY2hhbmdlcyBpbiB0aGUgZ2l2ZW4gaW50ZXJ2YWwuXG4gKlxuICogQHBhcmFtIHRpbWVab25lIC0gVGltZSB6b25lIG5hbWUgKElBTkEgb3IgVVRDIG9mZnNldClcbiAqIEBwYXJhbSBpbnRlcnZhbCAtIFRpbWUgaW50ZXJ2YWwgdG8gc2NhbiBmb3IgY2hhbmdlc1xuICpcbiAqIEByZXR1cm5zIEFycmF5IG9mIHRpbWUgem9uZSBjaGFuZ2VzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0elNjYW4odGltZVpvbmUsIGludGVydmFsKSB7XG4gIGNvbnN0IGNoYW5nZXMgPSBbXTtcbiAgY29uc3QgbW9udGhEYXRlID0gbmV3IERhdGUoaW50ZXJ2YWwuc3RhcnQpO1xuICBtb250aERhdGUuc2V0VVRDU2Vjb25kcygwLCAwKTtcbiAgY29uc3QgZW5kRGF0ZSA9IG5ldyBEYXRlKGludGVydmFsLmVuZCk7XG4gIGVuZERhdGUuc2V0VVRDU2Vjb25kcygwLCAwKTtcbiAgY29uc3QgZW5kTW9udGhUaW1lID0gK2VuZERhdGU7XG4gIGxldCBsYXN0T2Zmc2V0ID0gdHpPZmZzZXQodGltZVpvbmUsIG1vbnRoRGF0ZSk7XG4gIHdoaWxlICgrbW9udGhEYXRlIDwgZW5kTW9udGhUaW1lKSB7XG4gICAgLy8gTW9udGggZm9yd2FyZFxuICAgIG1vbnRoRGF0ZS5zZXRVVENNb250aChtb250aERhdGUuZ2V0VVRDTW9udGgoKSArIDEpO1xuXG4gICAgLy8gRmluZCB0aGUgbW9udGggd2hlcmUgdGhlIG9mZnNldCBjaGFuZ2VzXG4gICAgY29uc3Qgb2Zmc2V0ID0gdHpPZmZzZXQodGltZVpvbmUsIG1vbnRoRGF0ZSk7XG4gICAgaWYgKG9mZnNldCAhPSBsYXN0T2Zmc2V0KSB7XG4gICAgICAvLyBSZXdpbmQgYSBtb250aCBiYWNrIHRvIGZpbmQgdGhlIGRheSB3aGVyZSB0aGUgb2Zmc2V0IGNoYW5nZXNcbiAgICAgIGNvbnN0IGRheURhdGUgPSBuZXcgRGF0ZShtb250aERhdGUpO1xuICAgICAgZGF5RGF0ZS5zZXRVVENNb250aChkYXlEYXRlLmdldFVUQ01vbnRoKCkgLSAxKTtcbiAgICAgIGNvbnN0IGVuZERheVRpbWUgPSArbW9udGhEYXRlO1xuICAgICAgbGFzdE9mZnNldCA9IHR6T2Zmc2V0KHRpbWVab25lLCBkYXlEYXRlKTtcbiAgICAgIHdoaWxlICgrZGF5RGF0ZSA8IGVuZERheVRpbWUpIHtcbiAgICAgICAgLy8gRGF5IGZvcndhcmRcbiAgICAgICAgZGF5RGF0ZS5zZXRVVENEYXRlKGRheURhdGUuZ2V0VVRDRGF0ZSgpICsgMSk7XG5cbiAgICAgICAgLy8gRmluZCB0aGUgZGF5IHdoZXJlIHRoZSBvZmZzZXQgY2hhbmdlc1xuICAgICAgICBjb25zdCBvZmZzZXQgPSB0ek9mZnNldCh0aW1lWm9uZSwgZGF5RGF0ZSk7XG4gICAgICAgIGlmIChvZmZzZXQgIT0gbGFzdE9mZnNldCkge1xuICAgICAgICAgIC8vIFJld2luZCBhIGRheSBiYWNrIHRvIGZpbmQgdGhlIHRpbWUgd2hlcmUgdGhlIG9mZnNldCBjaGFuZ2VzXG4gICAgICAgICAgY29uc3QgaG91ckRhdGUgPSBuZXcgRGF0ZShkYXlEYXRlKTtcbiAgICAgICAgICBob3VyRGF0ZS5zZXRVVENEYXRlKGhvdXJEYXRlLmdldFVUQ0RhdGUoKSAtIDEpO1xuICAgICAgICAgIGNvbnN0IGVuZEhvdXJUaW1lID0gK2RheURhdGU7XG4gICAgICAgICAgbGFzdE9mZnNldCA9IHR6T2Zmc2V0KHRpbWVab25lLCBob3VyRGF0ZSk7XG4gICAgICAgICAgd2hpbGUgKCtob3VyRGF0ZSA8IGVuZEhvdXJUaW1lKSB7XG4gICAgICAgICAgICAvLyBIb3VyIGZvcndhcmRcbiAgICAgICAgICAgIGhvdXJEYXRlLnNldFVUQ0hvdXJzKGhvdXJEYXRlLmdldFVUQ0hvdXJzKCkgKyAxKTtcblxuICAgICAgICAgICAgLy8gRmluZCB0aGUgaG91ciB3aGVyZSB0aGUgb2Zmc2V0IGNoYW5nZXNcbiAgICAgICAgICAgIGNvbnN0IGhvdXJPZmZzZXQgPSB0ek9mZnNldCh0aW1lWm9uZSwgaG91ckRhdGUpO1xuICAgICAgICAgICAgaWYgKGhvdXJPZmZzZXQgIT09IGxhc3RPZmZzZXQpIHtcbiAgICAgICAgICAgICAgY2hhbmdlcy5wdXNoKHtcbiAgICAgICAgICAgICAgICBkYXRlOiBuZXcgRGF0ZShob3VyRGF0ZSksXG4gICAgICAgICAgICAgICAgY2hhbmdlOiBob3VyT2Zmc2V0IC0gbGFzdE9mZnNldCxcbiAgICAgICAgICAgICAgICBvZmZzZXQ6IGhvdXJPZmZzZXRcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsYXN0T2Zmc2V0ID0gaG91ck9mZnNldDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgbGFzdE9mZnNldCA9IG9mZnNldDtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdE9mZnNldCA9IG9mZnNldDtcbiAgfVxuICByZXR1cm4gY2hhbmdlcztcbn0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/@date-fns/tz/tzScan/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@date-fns/tz/constants/index.js":
/*!**********************************************************!*\
  !*** ../../node_modules/@date-fns/tz/constants/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   constructFromSymbol: () => (/* binding */ constructFromSymbol)\n/* harmony export */ });\n/**\n * The symbol to access the `TZDate`'s function to construct a new instance from\n * the provided value. It helps date-fns to inherit the time zone.\n */\nconst constructFromSymbol = Symbol.for(\"constructDateFrom\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BkYXRlLWZucy90ei9jb25zdGFudHMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ08iLCJzb3VyY2VzIjpbIi9Vc2Vycy9uYXRlc3BpbG1hbi9SZXBvcy9FUFRTUy13ZWJzaXRlL2VwdHNzLXNpdGUvbm9kZV9tb2R1bGVzL0BkYXRlLWZucy90ei9jb25zdGFudHMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGUgc3ltYm9sIHRvIGFjY2VzcyB0aGUgYFRaRGF0ZWAncyBmdW5jdGlvbiB0byBjb25zdHJ1Y3QgYSBuZXcgaW5zdGFuY2UgZnJvbVxuICogdGhlIHByb3ZpZGVkIHZhbHVlLiBJdCBoZWxwcyBkYXRlLWZucyB0byBpbmhlcml0IHRoZSB0aW1lIHpvbmUuXG4gKi9cbmV4cG9ydCBjb25zdCBjb25zdHJ1Y3RGcm9tU3ltYm9sID0gU3ltYm9sLmZvcihcImNvbnN0cnVjdERhdGVGcm9tXCIpOyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@date-fns/tz/constants/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@date-fns/tz/date/index.js":
/*!*****************************************************!*\
  !*** ../../node_modules/@date-fns/tz/date/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TZDate: () => (/* binding */ TZDate)\n/* harmony export */ });\n/* harmony import */ var _tzName_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tzName/index.js */ \"(ssr)/../../node_modules/@date-fns/tz/tzName/index.js\");\n/* harmony import */ var _mini_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mini.js */ \"(ssr)/../../node_modules/@date-fns/tz/date/mini.js\");\n\n\nclass TZDate extends _mini_js__WEBPACK_IMPORTED_MODULE_1__.TZDateMini {\n  //#region static\n\n  static tz(tz, ...args) {\n    return args.length ? new TZDate(...args, tz) : new TZDate(Date.now(), tz);\n  }\n\n  //#endregion\n\n  //#region representation\n\n  toISOString() {\n    const [sign, hours, minutes] = this.tzComponents();\n    const tz = `${sign}${hours}:${minutes}`;\n    return this.internal.toISOString().slice(0, -1) + tz;\n  }\n  toString() {\n    // \"Tue Aug 13 2024 07:50:19 GMT+0800 (Singapore Standard Time)\";\n    return `${this.toDateString()} ${this.toTimeString()}`;\n  }\n  toDateString() {\n    // toUTCString returns RFC 7231 (\"Mon, 12 Aug 2024 23:36:08 GMT\")\n    const [day, date, month, year] = this.internal.toUTCString().split(\" \");\n    // \"Tue Aug 13 2024\"\n    return `${day?.slice(0, -1) /* Remove \",\" */} ${month} ${date} ${year}`;\n  }\n  toTimeString() {\n    // toUTCString returns RFC 7231 (\"Mon, 12 Aug 2024 23:36:08 GMT\")\n    const time = this.internal.toUTCString().split(\" \")[4];\n    const [sign, hours, minutes] = this.tzComponents();\n    // \"07:42:23 GMT+0800 (Singapore Standard Time)\"\n    return `${time} GMT${sign}${hours}${minutes} (${(0,_tzName_index_js__WEBPACK_IMPORTED_MODULE_0__.tzName)(this.timeZone, this)})`;\n  }\n  toLocaleString(locales, options) {\n    return Date.prototype.toLocaleString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n  toLocaleDateString(locales, options) {\n    return Date.prototype.toLocaleDateString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n  toLocaleTimeString(locales, options) {\n    return Date.prototype.toLocaleTimeString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n\n  //#endregion\n\n  //#region private\n\n  tzComponents() {\n    const offset = this.getTimezoneOffset();\n    const sign = offset > 0 ? \"-\" : \"+\";\n    const hours = String(Math.floor(Math.abs(offset) / 60)).padStart(2, \"0\");\n    const minutes = String(Math.abs(offset) % 60).padStart(2, \"0\");\n    return [sign, hours, minutes];\n  }\n\n  //#endregion\n\n  withTimeZone(timeZone) {\n    return new TZDate(+this, timeZone);\n  }\n\n  //#region date-fns integration\n\n  [Symbol.for(\"constructDateFrom\")](date) {\n    return new TZDate(+new Date(date), this.timeZone);\n  }\n\n  //#endregion\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BkYXRlLWZucy90ei9kYXRlL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE0QztBQUNMO0FBQ2hDLHFCQUFxQixnREFBVTtBQUN0Qzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQixLQUFLLEVBQUUsTUFBTSxHQUFHLFFBQVE7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHFCQUFxQixFQUFFLG9CQUFvQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxvQ0FBb0MsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLEtBQUs7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxNQUFNLEtBQUssS0FBSyxFQUFFLE1BQU0sRUFBRSxTQUFTLEdBQUcsd0RBQU0sc0JBQXNCO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL25hdGVzcGlsbWFuL1JlcG9zL0VQVFNTLXdlYnNpdGUvZXB0c3Mtc2l0ZS9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L2RhdGUvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdHpOYW1lIH0gZnJvbSBcIi4uL3R6TmFtZS9pbmRleC5qc1wiO1xuaW1wb3J0IHsgVFpEYXRlTWluaSB9IGZyb20gXCIuL21pbmkuanNcIjtcbmV4cG9ydCBjbGFzcyBUWkRhdGUgZXh0ZW5kcyBUWkRhdGVNaW5pIHtcbiAgLy8jcmVnaW9uIHN0YXRpY1xuXG4gIHN0YXRpYyB0eih0eiwgLi4uYXJncykge1xuICAgIHJldHVybiBhcmdzLmxlbmd0aCA/IG5ldyBUWkRhdGUoLi4uYXJncywgdHopIDogbmV3IFRaRGF0ZShEYXRlLm5vdygpLCB0eik7XG4gIH1cblxuICAvLyNlbmRyZWdpb25cblxuICAvLyNyZWdpb24gcmVwcmVzZW50YXRpb25cblxuICB0b0lTT1N0cmluZygpIHtcbiAgICBjb25zdCBbc2lnbiwgaG91cnMsIG1pbnV0ZXNdID0gdGhpcy50ekNvbXBvbmVudHMoKTtcbiAgICBjb25zdCB0eiA9IGAke3NpZ259JHtob3Vyc306JHttaW51dGVzfWA7XG4gICAgcmV0dXJuIHRoaXMuaW50ZXJuYWwudG9JU09TdHJpbmcoKS5zbGljZSgwLCAtMSkgKyB0ejtcbiAgfVxuICB0b1N0cmluZygpIHtcbiAgICAvLyBcIlR1ZSBBdWcgMTMgMjAyNCAwNzo1MDoxOSBHTVQrMDgwMCAoU2luZ2Fwb3JlIFN0YW5kYXJkIFRpbWUpXCI7XG4gICAgcmV0dXJuIGAke3RoaXMudG9EYXRlU3RyaW5nKCl9ICR7dGhpcy50b1RpbWVTdHJpbmcoKX1gO1xuICB9XG4gIHRvRGF0ZVN0cmluZygpIHtcbiAgICAvLyB0b1VUQ1N0cmluZyByZXR1cm5zIFJGQyA3MjMxIChcIk1vbiwgMTIgQXVnIDIwMjQgMjM6MzY6MDggR01UXCIpXG4gICAgY29uc3QgW2RheSwgZGF0ZSwgbW9udGgsIHllYXJdID0gdGhpcy5pbnRlcm5hbC50b1VUQ1N0cmluZygpLnNwbGl0KFwiIFwiKTtcbiAgICAvLyBcIlR1ZSBBdWcgMTMgMjAyNFwiXG4gICAgcmV0dXJuIGAke2RheT8uc2xpY2UoMCwgLTEpIC8qIFJlbW92ZSBcIixcIiAqL30gJHttb250aH0gJHtkYXRlfSAke3llYXJ9YDtcbiAgfVxuICB0b1RpbWVTdHJpbmcoKSB7XG4gICAgLy8gdG9VVENTdHJpbmcgcmV0dXJucyBSRkMgNzIzMSAoXCJNb24sIDEyIEF1ZyAyMDI0IDIzOjM2OjA4IEdNVFwiKVxuICAgIGNvbnN0IHRpbWUgPSB0aGlzLmludGVybmFsLnRvVVRDU3RyaW5nKCkuc3BsaXQoXCIgXCIpWzRdO1xuICAgIGNvbnN0IFtzaWduLCBob3VycywgbWludXRlc10gPSB0aGlzLnR6Q29tcG9uZW50cygpO1xuICAgIC8vIFwiMDc6NDI6MjMgR01UKzA4MDAgKFNpbmdhcG9yZSBTdGFuZGFyZCBUaW1lKVwiXG4gICAgcmV0dXJuIGAke3RpbWV9IEdNVCR7c2lnbn0ke2hvdXJzfSR7bWludXRlc30gKCR7dHpOYW1lKHRoaXMudGltZVpvbmUsIHRoaXMpfSlgO1xuICB9XG4gIHRvTG9jYWxlU3RyaW5nKGxvY2FsZXMsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gRGF0ZS5wcm90b3R5cGUudG9Mb2NhbGVTdHJpbmcuY2FsbCh0aGlzLCBsb2NhbGVzLCB7XG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgdGltZVpvbmU6IG9wdGlvbnM/LnRpbWVab25lIHx8IHRoaXMudGltZVpvbmVcbiAgICB9KTtcbiAgfVxuICB0b0xvY2FsZURhdGVTdHJpbmcobG9jYWxlcywgb3B0aW9ucykge1xuICAgIHJldHVybiBEYXRlLnByb3RvdHlwZS50b0xvY2FsZURhdGVTdHJpbmcuY2FsbCh0aGlzLCBsb2NhbGVzLCB7XG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgdGltZVpvbmU6IG9wdGlvbnM/LnRpbWVab25lIHx8IHRoaXMudGltZVpvbmVcbiAgICB9KTtcbiAgfVxuICB0b0xvY2FsZVRpbWVTdHJpbmcobG9jYWxlcywgb3B0aW9ucykge1xuICAgIHJldHVybiBEYXRlLnByb3RvdHlwZS50b0xvY2FsZVRpbWVTdHJpbmcuY2FsbCh0aGlzLCBsb2NhbGVzLCB7XG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgdGltZVpvbmU6IG9wdGlvbnM/LnRpbWVab25lIHx8IHRoaXMudGltZVpvbmVcbiAgICB9KTtcbiAgfVxuXG4gIC8vI2VuZHJlZ2lvblxuXG4gIC8vI3JlZ2lvbiBwcml2YXRlXG5cbiAgdHpDb21wb25lbnRzKCkge1xuICAgIGNvbnN0IG9mZnNldCA9IHRoaXMuZ2V0VGltZXpvbmVPZmZzZXQoKTtcbiAgICBjb25zdCBzaWduID0gb2Zmc2V0ID4gMCA/IFwiLVwiIDogXCIrXCI7XG4gICAgY29uc3QgaG91cnMgPSBTdHJpbmcoTWF0aC5mbG9vcihNYXRoLmFicyhvZmZzZXQpIC8gNjApKS5wYWRTdGFydCgyLCBcIjBcIik7XG4gICAgY29uc3QgbWludXRlcyA9IFN0cmluZyhNYXRoLmFicyhvZmZzZXQpICUgNjApLnBhZFN0YXJ0KDIsIFwiMFwiKTtcbiAgICByZXR1cm4gW3NpZ24sIGhvdXJzLCBtaW51dGVzXTtcbiAgfVxuXG4gIC8vI2VuZHJlZ2lvblxuXG4gIHdpdGhUaW1lWm9uZSh0aW1lWm9uZSkge1xuICAgIHJldHVybiBuZXcgVFpEYXRlKCt0aGlzLCB0aW1lWm9uZSk7XG4gIH1cblxuICAvLyNyZWdpb24gZGF0ZS1mbnMgaW50ZWdyYXRpb25cblxuICBbU3ltYm9sLmZvcihcImNvbnN0cnVjdERhdGVGcm9tXCIpXShkYXRlKSB7XG4gICAgcmV0dXJuIG5ldyBUWkRhdGUoK25ldyBEYXRlKGRhdGUpLCB0aGlzLnRpbWVab25lKTtcbiAgfVxuXG4gIC8vI2VuZHJlZ2lvblxufSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@date-fns/tz/date/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@date-fns/tz/date/mini.js":
/*!****************************************************!*\
  !*** ../../node_modules/@date-fns/tz/date/mini.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TZDateMini: () => (/* binding */ TZDateMini)\n/* harmony export */ });\n/* harmony import */ var _tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tzOffset/index.js */ \"(ssr)/../../node_modules/@date-fns/tz/tzOffset/index.js\");\n\nclass TZDateMini extends Date {\n  //#region static\n\n  constructor(...args) {\n    super();\n    if (args.length > 1 && typeof args[args.length - 1] === \"string\") {\n      this.timeZone = args.pop();\n    }\n    this.internal = new Date();\n    if (isNaN((0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(this.timeZone, this))) {\n      this.setTime(NaN);\n    } else {\n      if (!args.length) {\n        this.setTime(Date.now());\n      } else if (typeof args[0] === \"number\" && (args.length === 1 || args.length === 2 && typeof args[1] !== \"number\")) {\n        this.setTime(args[0]);\n      } else if (typeof args[0] === \"string\") {\n        this.setTime(+new Date(args[0]));\n      } else if (args[0] instanceof Date) {\n        this.setTime(+args[0]);\n      } else {\n        this.setTime(+new Date(...args));\n        adjustToSystemTZ(this, NaN);\n        syncToInternal(this);\n      }\n    }\n  }\n  static tz(tz, ...args) {\n    return args.length ? new TZDateMini(...args, tz) : new TZDateMini(Date.now(), tz);\n  }\n\n  //#endregion\n\n  //#region time zone\n\n  withTimeZone(timeZone) {\n    return new TZDateMini(+this, timeZone);\n  }\n  getTimezoneOffset() {\n    const offset = -(0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(this.timeZone, this);\n    // Remove the seconds offset\n    // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\n    return offset > 0 ? Math.floor(offset) : Math.ceil(offset);\n  }\n\n  //#endregion\n\n  //#region time\n\n  setTime(time) {\n    Date.prototype.setTime.apply(this, arguments);\n    syncToInternal(this);\n    return +this;\n  }\n\n  //#endregion\n\n  //#region date-fns integration\n\n  [Symbol.for(\"constructDateFrom\")](date) {\n    return new TZDateMini(+new Date(date), this.timeZone);\n  }\n\n  //#endregion\n}\n\n// Assign getters and setters\nconst re = /^(get|set)(?!UTC)/;\nObject.getOwnPropertyNames(Date.prototype).forEach(method => {\n  if (!re.test(method)) return;\n  const utcMethod = method.replace(re, \"$1UTC\");\n  // Filter out methods without UTC counterparts\n  if (!TZDateMini.prototype[utcMethod]) return;\n  if (method.startsWith(\"get\")) {\n    // Delegate to internal date's UTC method\n    TZDateMini.prototype[method] = function () {\n      return this.internal[utcMethod]();\n    };\n  } else {\n    // Assign regular setter\n    TZDateMini.prototype[method] = function () {\n      Date.prototype[utcMethod].apply(this.internal, arguments);\n      syncFromInternal(this);\n      return +this;\n    };\n\n    // Assign UTC setter\n    TZDateMini.prototype[utcMethod] = function () {\n      Date.prototype[utcMethod].apply(this, arguments);\n      syncToInternal(this);\n      return +this;\n    };\n  }\n});\n\n/**\n * Function syncs time to internal date, applying the time zone offset.\n *\n * @param {Date} date - Date to sync\n */\nfunction syncToInternal(date) {\n  date.internal.setTime(+date);\n  date.internal.setUTCSeconds(date.internal.getUTCSeconds() - Math.round(-(0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(date.timeZone, date) * 60));\n}\n\n/**\n * Function syncs the internal date UTC values to the date. It allows to get\n * accurate timestamp value.\n *\n * @param {Date} date - The date to sync\n */\nfunction syncFromInternal(date) {\n  // First we transpose the internal values\n  Date.prototype.setFullYear.call(date, date.internal.getUTCFullYear(), date.internal.getUTCMonth(), date.internal.getUTCDate());\n  Date.prototype.setHours.call(date, date.internal.getUTCHours(), date.internal.getUTCMinutes(), date.internal.getUTCSeconds(), date.internal.getUTCMilliseconds());\n\n  // Now we have to adjust the date to the system time zone\n  adjustToSystemTZ(date);\n}\n\n/**\n * Function adjusts the date to the system time zone. It uses the time zone\n * differences to calculate the offset and adjust the date.\n *\n * @param {Date} date - Date to adjust\n */\nfunction adjustToSystemTZ(date) {\n  // Save the time zone offset before all the adjustments\n  const baseOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(date.timeZone, date);\n  // Remove the seconds offset\n  // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\n  const offset = baseOffset > 0 ? Math.floor(baseOffset) : Math.ceil(baseOffset);\n  //#region System DST adjustment\n\n  // The biggest problem with using the system time zone is that when we create\n  // a date from internal values stored in UTC, the system time zone might end\n  // up on the DST hour:\n  //\n  //   $ TZ=America/New_York node\n  //   > new Date(2020, 2, 8, 1).toString()\n  //   'Sun Mar 08 2020 01:00:00 GMT-0500 (Eastern Standard Time)'\n  //   > new Date(2020, 2, 8, 2).toString()\n  //   'Sun Mar 08 2020 03:00:00 GMT-0400 (Eastern Daylight Time)'\n  //   > new Date(2020, 2, 8, 3).toString()\n  //   'Sun Mar 08 2020 03:00:00 GMT-0400 (Eastern Daylight Time)'\n  //   > new Date(2020, 2, 8, 4).toString()\n  //   'Sun Mar 08 2020 04:00:00 GMT-0400 (Eastern Daylight Time)'\n  //\n  // Here we get the same hour for both 2 and 3, because the system time zone\n  // has DST beginning at 8 March 2020, 2 a.m. and jumps to 3 a.m. So we have\n  // to adjust the internal date to reflect that.\n  //\n  // However we want to adjust only if that's the DST hour the change happenes,\n  // not the hour where DST moves to.\n\n  // We calculate the previous hour to see if the time zone offset has changed\n  // and we have landed on the DST hour.\n  const prevHour = new Date(+date);\n  // We use UTC methods here as we don't want to land on the same hour again\n  // in case of DST.\n  prevHour.setUTCHours(prevHour.getUTCHours() - 1);\n\n  // Calculate if we are on the system DST hour.\n  const systemOffset = -new Date(+date).getTimezoneOffset();\n  const prevHourSystemOffset = -new Date(+prevHour).getTimezoneOffset();\n  const systemDSTChange = systemOffset - prevHourSystemOffset;\n  // Detect the DST shift. System DST change will occur both on\n  const dstShift = Date.prototype.getHours.apply(date) !== date.internal.getUTCHours();\n\n  // Move the internal date when we are on the system DST hour.\n  if (systemDSTChange && dstShift) date.internal.setUTCMinutes(date.internal.getUTCMinutes() + systemDSTChange);\n\n  //#endregion\n\n  //#region System diff adjustment\n\n  // Now we need to adjust the date, since we just applied internal values.\n  // We need to calculate the difference between the system and date time zones\n  // and apply it to the date.\n\n  const offsetDiff = systemOffset - offset;\n  if (offsetDiff) Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + offsetDiff);\n\n  //#endregion\n\n  //#region Seconds System diff adjustment\n\n  const systemDate = new Date(+date);\n  // Set the UTC seconds to 0 to isolate the timezone offset in seconds.\n  systemDate.setUTCSeconds(0);\n  // For negative systemOffset, invert the seconds.\n  const systemSecondsOffset = systemOffset > 0 ? systemDate.getSeconds() : (systemDate.getSeconds() - 60) % 60;\n\n  // Calculate the seconds offset based on the timezone offset.\n  const secondsOffset = Math.round(-((0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(date.timeZone, date) * 60)) % 60;\n  if (secondsOffset || systemSecondsOffset) {\n    date.internal.setUTCSeconds(date.internal.getUTCSeconds() + secondsOffset);\n    Date.prototype.setUTCSeconds.call(date, Date.prototype.getUTCSeconds.call(date) + secondsOffset + systemSecondsOffset);\n  }\n\n  //#endregion\n\n  //#region Post-adjustment DST fix\n\n  const postBaseOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(date.timeZone, date);\n  // Remove the seconds offset\n  // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\n  const postOffset = postBaseOffset > 0 ? Math.floor(postBaseOffset) : Math.ceil(postBaseOffset);\n  const postSystemOffset = -new Date(+date).getTimezoneOffset();\n  const postOffsetDiff = postSystemOffset - postOffset;\n  const offsetChanged = postOffset !== offset;\n  const postDiff = postOffsetDiff - offsetDiff;\n  if (offsetChanged && postDiff) {\n    Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + postDiff);\n\n    // Now we need to check if got offset change during the post-adjustment.\n    // If so, we also need both dates to reflect that.\n\n    const newBaseOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(date.timeZone, date);\n    // Remove the seconds offset\n    // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\n    const newOffset = newBaseOffset > 0 ? Math.floor(newBaseOffset) : Math.ceil(newBaseOffset);\n    const offsetChange = postOffset - newOffset;\n    if (offsetChange) {\n      date.internal.setUTCMinutes(date.internal.getUTCMinutes() + offsetChange);\n      Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + offsetChange);\n    }\n  }\n\n  //#endregion\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@date-fns/tz/date/mini.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@date-fns/tz/index.js":
/*!************************************************!*\
  !*** ../../node_modules/@date-fns/tz/index.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TZDate: () => (/* reexport safe */ _date_index_js__WEBPACK_IMPORTED_MODULE_1__.TZDate),\n/* harmony export */   TZDateMini: () => (/* reexport safe */ _date_mini_js__WEBPACK_IMPORTED_MODULE_2__.TZDateMini),\n/* harmony export */   constructFromSymbol: () => (/* reexport safe */ _constants_index_js__WEBPACK_IMPORTED_MODULE_0__.constructFromSymbol),\n/* harmony export */   tz: () => (/* reexport safe */ _tz_index_js__WEBPACK_IMPORTED_MODULE_3__.tz),\n/* harmony export */   tzName: () => (/* reexport safe */ _tzName_index_js__WEBPACK_IMPORTED_MODULE_6__.tzName),\n/* harmony export */   tzOffset: () => (/* reexport safe */ _tzOffset_index_js__WEBPACK_IMPORTED_MODULE_4__.tzOffset),\n/* harmony export */   tzScan: () => (/* reexport safe */ _tzScan_index_js__WEBPACK_IMPORTED_MODULE_5__.tzScan)\n/* harmony export */ });\n/* harmony import */ var _constants_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants/index.js */ \"(ssr)/../../node_modules/@date-fns/tz/constants/index.js\");\n/* harmony import */ var _date_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./date/index.js */ \"(ssr)/../../node_modules/@date-fns/tz/date/index.js\");\n/* harmony import */ var _date_mini_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./date/mini.js */ \"(ssr)/../../node_modules/@date-fns/tz/date/mini.js\");\n/* harmony import */ var _tz_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tz/index.js */ \"(ssr)/../../node_modules/@date-fns/tz/tz/index.js\");\n/* harmony import */ var _tzOffset_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tzOffset/index.js */ \"(ssr)/../../node_modules/@date-fns/tz/tzOffset/index.js\");\n/* harmony import */ var _tzScan_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tzScan/index.js */ \"(ssr)/../../node_modules/@date-fns/tz/tzScan/index.js\");\n/* harmony import */ var _tzName_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tzName/index.js */ \"(ssr)/../../node_modules/@date-fns/tz/tzName/index.js\");\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BkYXRlLWZucy90ei9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFxQztBQUNMO0FBQ0Q7QUFDRDtBQUNNO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9uYXRlc3BpbG1hbi9SZXBvcy9FUFRTUy13ZWJzaXRlL2VwdHNzLXNpdGUvbm9kZV9tb2R1bGVzL0BkYXRlLWZucy90ei9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9jb25zdGFudHMvaW5kZXguanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2RhdGUvaW5kZXguanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2RhdGUvbWluaS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdHovaW5kZXguanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3R6T2Zmc2V0L2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi90elNjYW4vaW5kZXguanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3R6TmFtZS9pbmRleC5qc1wiOyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@date-fns/tz/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@date-fns/tz/tz/index.js":
/*!***************************************************!*\
  !*** ../../node_modules/@date-fns/tz/tz/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tz: () => (/* binding */ tz)\n/* harmony export */ });\n/* harmony import */ var _date_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../date/index.js */ \"(ssr)/../../node_modules/@date-fns/tz/date/index.js\");\n\n\n/**\n * The function creates accepts a time zone and returns a function that creates\n * a new `TZDate` instance in the time zone from the provided value. Use it to\n * provide the context for the date-fns functions, via the `in` option.\n *\n * @param timeZone - Time zone name (IANA or UTC offset)\n *\n * @returns Function that creates a new `TZDate` instance in the time zone\n */\nconst tz = timeZone => value => _date_index_js__WEBPACK_IMPORTED_MODULE_0__.TZDate.tz(timeZone, +new Date(value));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BkYXRlLWZucy90ei90ei9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwQzs7QUFFMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZ0NBQWdDLGtEQUFNIiwic291cmNlcyI6WyIvVXNlcnMvbmF0ZXNwaWxtYW4vUmVwb3MvRVBUU1Mtd2Vic2l0ZS9lcHRzcy1zaXRlL25vZGVfbW9kdWxlcy9AZGF0ZS1mbnMvdHovdHovaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVFpEYXRlIH0gZnJvbSBcIi4uL2RhdGUvaW5kZXguanNcIjtcblxuLyoqXG4gKiBUaGUgZnVuY3Rpb24gY3JlYXRlcyBhY2NlcHRzIGEgdGltZSB6b25lIGFuZCByZXR1cm5zIGEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzXG4gKiBhIG5ldyBgVFpEYXRlYCBpbnN0YW5jZSBpbiB0aGUgdGltZSB6b25lIGZyb20gdGhlIHByb3ZpZGVkIHZhbHVlLiBVc2UgaXQgdG9cbiAqIHByb3ZpZGUgdGhlIGNvbnRleHQgZm9yIHRoZSBkYXRlLWZucyBmdW5jdGlvbnMsIHZpYSB0aGUgYGluYCBvcHRpb24uXG4gKlxuICogQHBhcmFtIHRpbWVab25lIC0gVGltZSB6b25lIG5hbWUgKElBTkEgb3IgVVRDIG9mZnNldClcbiAqXG4gKiBAcmV0dXJucyBGdW5jdGlvbiB0aGF0IGNyZWF0ZXMgYSBuZXcgYFRaRGF0ZWAgaW5zdGFuY2UgaW4gdGhlIHRpbWUgem9uZVxuICovXG5leHBvcnQgY29uc3QgdHogPSB0aW1lWm9uZSA9PiB2YWx1ZSA9PiBUWkRhdGUudHoodGltZVpvbmUsICtuZXcgRGF0ZSh2YWx1ZSkpOyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@date-fns/tz/tz/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@date-fns/tz/tzName/index.js":
/*!*******************************************************!*\
  !*** ../../node_modules/@date-fns/tz/tzName/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tzName: () => (/* binding */ tzName)\n/* harmony export */ });\n/**\n * Time zone name format.\n */\n\n/**\n * The function returns the time zone name for the given date in the specified\n * time zone.\n *\n * It uses the `Intl.DateTimeFormat` API and by default outputs the time zone\n * name in a long format, e.g. \"Pacific Standard Time\" or\n * \"Singapore Standard Time\".\n *\n * It is possible to specify the format as the third argument using one of the following options\n *\n * - \"short\": e.g. \"EDT\" or \"GMT+8\".\n * - \"long\": e.g. \"Eastern Daylight Time\".\n * - \"shortGeneric\": e.g. \"ET\" or \"Singapore Time\".\n * - \"longGeneric\": e.g. \"Eastern Time\" or \"Singapore Standard Time\".\n *\n * These options correspond to TR35 tokens `z..zzz`, `zzzz`, `v`, and `vvvv` respectively: https://www.unicode.org/reports/tr35/tr35-dates.html#dfst-zone\n *\n * @param timeZone - Time zone name (IANA or UTC offset)\n * @param date - Date object to get the time zone name for\n * @param format - Optional format of the time zone name. Defaults to \"long\". Can be \"short\", \"long\", \"shortGeneric\", or \"longGeneric\".\n *\n * @returns Time zone name (e.g. \"Singapore Standard Time\")\n */\nfunction tzName(timeZone, date, format = \"long\") {\n  return new Intl.DateTimeFormat(\"en-US\", {\n    // Enforces engine to render the time. Without the option JavaScriptCore omits it.\n    hour: \"numeric\",\n    timeZone: timeZone,\n    timeZoneName: format\n  }).format(date).split(/\\s/g) // Format.JS uses non-breaking spaces\n  .slice(2) // Skip the hour and AM/PM parts\n  .join(\" \");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BkYXRlLWZucy90ei90ek5hbWUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL25hdGVzcGlsbWFuL1JlcG9zL0VQVFNTLXdlYnNpdGUvZXB0c3Mtc2l0ZS9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L3R6TmFtZS9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRpbWUgem9uZSBuYW1lIGZvcm1hdC5cbiAqL1xuXG4vKipcbiAqIFRoZSBmdW5jdGlvbiByZXR1cm5zIHRoZSB0aW1lIHpvbmUgbmFtZSBmb3IgdGhlIGdpdmVuIGRhdGUgaW4gdGhlIHNwZWNpZmllZFxuICogdGltZSB6b25lLlxuICpcbiAqIEl0IHVzZXMgdGhlIGBJbnRsLkRhdGVUaW1lRm9ybWF0YCBBUEkgYW5kIGJ5IGRlZmF1bHQgb3V0cHV0cyB0aGUgdGltZSB6b25lXG4gKiBuYW1lIGluIGEgbG9uZyBmb3JtYXQsIGUuZy4gXCJQYWNpZmljIFN0YW5kYXJkIFRpbWVcIiBvclxuICogXCJTaW5nYXBvcmUgU3RhbmRhcmQgVGltZVwiLlxuICpcbiAqIEl0IGlzIHBvc3NpYmxlIHRvIHNwZWNpZnkgdGhlIGZvcm1hdCBhcyB0aGUgdGhpcmQgYXJndW1lbnQgdXNpbmcgb25lIG9mIHRoZSBmb2xsb3dpbmcgb3B0aW9uc1xuICpcbiAqIC0gXCJzaG9ydFwiOiBlLmcuIFwiRURUXCIgb3IgXCJHTVQrOFwiLlxuICogLSBcImxvbmdcIjogZS5nLiBcIkVhc3Rlcm4gRGF5bGlnaHQgVGltZVwiLlxuICogLSBcInNob3J0R2VuZXJpY1wiOiBlLmcuIFwiRVRcIiBvciBcIlNpbmdhcG9yZSBUaW1lXCIuXG4gKiAtIFwibG9uZ0dlbmVyaWNcIjogZS5nLiBcIkVhc3Rlcm4gVGltZVwiIG9yIFwiU2luZ2Fwb3JlIFN0YW5kYXJkIFRpbWVcIi5cbiAqXG4gKiBUaGVzZSBvcHRpb25zIGNvcnJlc3BvbmQgdG8gVFIzNSB0b2tlbnMgYHouLnp6emAsIGB6enp6YCwgYHZgLCBhbmQgYHZ2dnZgIHJlc3BlY3RpdmVseTogaHR0cHM6Ly93d3cudW5pY29kZS5vcmcvcmVwb3J0cy90cjM1L3RyMzUtZGF0ZXMuaHRtbCNkZnN0LXpvbmVcbiAqXG4gKiBAcGFyYW0gdGltZVpvbmUgLSBUaW1lIHpvbmUgbmFtZSAoSUFOQSBvciBVVEMgb2Zmc2V0KVxuICogQHBhcmFtIGRhdGUgLSBEYXRlIG9iamVjdCB0byBnZXQgdGhlIHRpbWUgem9uZSBuYW1lIGZvclxuICogQHBhcmFtIGZvcm1hdCAtIE9wdGlvbmFsIGZvcm1hdCBvZiB0aGUgdGltZSB6b25lIG5hbWUuIERlZmF1bHRzIHRvIFwibG9uZ1wiLiBDYW4gYmUgXCJzaG9ydFwiLCBcImxvbmdcIiwgXCJzaG9ydEdlbmVyaWNcIiwgb3IgXCJsb25nR2VuZXJpY1wiLlxuICpcbiAqIEByZXR1cm5zIFRpbWUgem9uZSBuYW1lIChlLmcuIFwiU2luZ2Fwb3JlIFN0YW5kYXJkIFRpbWVcIilcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHR6TmFtZSh0aW1lWm9uZSwgZGF0ZSwgZm9ybWF0ID0gXCJsb25nXCIpIHtcbiAgcmV0dXJuIG5ldyBJbnRsLkRhdGVUaW1lRm9ybWF0KFwiZW4tVVNcIiwge1xuICAgIC8vIEVuZm9yY2VzIGVuZ2luZSB0byByZW5kZXIgdGhlIHRpbWUuIFdpdGhvdXQgdGhlIG9wdGlvbiBKYXZhU2NyaXB0Q29yZSBvbWl0cyBpdC5cbiAgICBob3VyOiBcIm51bWVyaWNcIixcbiAgICB0aW1lWm9uZTogdGltZVpvbmUsXG4gICAgdGltZVpvbmVOYW1lOiBmb3JtYXRcbiAgfSkuZm9ybWF0KGRhdGUpLnNwbGl0KC9cXHMvZykgLy8gRm9ybWF0LkpTIHVzZXMgbm9uLWJyZWFraW5nIHNwYWNlc1xuICAuc2xpY2UoMikgLy8gU2tpcCB0aGUgaG91ciBhbmQgQU0vUE0gcGFydHNcbiAgLmpvaW4oXCIgXCIpO1xufSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@date-fns/tz/tzName/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@date-fns/tz/tzOffset/index.js":
/*!*********************************************************!*\
  !*** ../../node_modules/@date-fns/tz/tzOffset/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tzOffset: () => (/* binding */ tzOffset)\n/* harmony export */ });\nconst offsetFormatCache = {};\nconst offsetCache = {};\n\n/**\n * The function extracts UTC offset in minutes from the given date in specified\n * time zone.\n *\n * Unlike `Date.prototype.getTimezoneOffset`, this function returns the value\n * mirrored to the sign of the offset in the time zone. For Asia/Singapore\n * (UTC+8), `tzOffset` returns 480, while `getTimezoneOffset` returns -480.\n *\n * @param timeZone - Time zone name (IANA or UTC offset)\n * @param date - Date to check the offset for\n *\n * @returns UTC offset in minutes\n */\nfunction tzOffset(timeZone, date) {\n  try {\n    const format = offsetFormatCache[timeZone] ||= new Intl.DateTimeFormat(\"en-US\", {\n      timeZone,\n      timeZoneName: \"longOffset\"\n    }).format;\n    const offsetStr = format(date).split(\"GMT\")[1];\n    if (offsetStr in offsetCache) return offsetCache[offsetStr];\n    return calcOffset(offsetStr, offsetStr.split(\":\"));\n  } catch {\n    // Fallback to manual parsing if the runtime doesn't support ±HH:MM/±HHMM/±HH\n    // See: https://github.com/nodejs/node/issues/53419\n    if (timeZone in offsetCache) return offsetCache[timeZone];\n    const captures = timeZone?.match(offsetRe);\n    if (captures) return calcOffset(timeZone, captures.slice(1));\n    return NaN;\n  }\n}\nconst offsetRe = /([+-]\\d\\d):?(\\d\\d)?/;\nfunction calcOffset(cacheStr, values) {\n  const hours = +(values[0] || 0);\n  const minutes = +(values[1] || 0);\n  // Convert seconds to minutes by dividing by 60 to keep the function return in minutes.\n  const seconds = +(values[2] || 0) / 60;\n  return offsetCache[cacheStr] = hours * 60 + minutes > 0 ? hours * 60 + minutes + seconds : hours * 60 - minutes - seconds;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BkYXRlLWZucy90ei90ek9mZnNldC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvbmF0ZXNwaWxtYW4vUmVwb3MvRVBUU1Mtd2Vic2l0ZS9lcHRzcy1zaXRlL25vZGVfbW9kdWxlcy9AZGF0ZS1mbnMvdHovdHpPZmZzZXQvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgb2Zmc2V0Rm9ybWF0Q2FjaGUgPSB7fTtcbmNvbnN0IG9mZnNldENhY2hlID0ge307XG5cbi8qKlxuICogVGhlIGZ1bmN0aW9uIGV4dHJhY3RzIFVUQyBvZmZzZXQgaW4gbWludXRlcyBmcm9tIHRoZSBnaXZlbiBkYXRlIGluIHNwZWNpZmllZFxuICogdGltZSB6b25lLlxuICpcbiAqIFVubGlrZSBgRGF0ZS5wcm90b3R5cGUuZ2V0VGltZXpvbmVPZmZzZXRgLCB0aGlzIGZ1bmN0aW9uIHJldHVybnMgdGhlIHZhbHVlXG4gKiBtaXJyb3JlZCB0byB0aGUgc2lnbiBvZiB0aGUgb2Zmc2V0IGluIHRoZSB0aW1lIHpvbmUuIEZvciBBc2lhL1NpbmdhcG9yZVxuICogKFVUQys4KSwgYHR6T2Zmc2V0YCByZXR1cm5zIDQ4MCwgd2hpbGUgYGdldFRpbWV6b25lT2Zmc2V0YCByZXR1cm5zIC00ODAuXG4gKlxuICogQHBhcmFtIHRpbWVab25lIC0gVGltZSB6b25lIG5hbWUgKElBTkEgb3IgVVRDIG9mZnNldClcbiAqIEBwYXJhbSBkYXRlIC0gRGF0ZSB0byBjaGVjayB0aGUgb2Zmc2V0IGZvclxuICpcbiAqIEByZXR1cm5zIFVUQyBvZmZzZXQgaW4gbWludXRlc1xuICovXG5leHBvcnQgZnVuY3Rpb24gdHpPZmZzZXQodGltZVpvbmUsIGRhdGUpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBmb3JtYXQgPSBvZmZzZXRGb3JtYXRDYWNoZVt0aW1lWm9uZV0gfHw9IG5ldyBJbnRsLkRhdGVUaW1lRm9ybWF0KFwiZW4tVVNcIiwge1xuICAgICAgdGltZVpvbmUsXG4gICAgICB0aW1lWm9uZU5hbWU6IFwibG9uZ09mZnNldFwiXG4gICAgfSkuZm9ybWF0O1xuICAgIGNvbnN0IG9mZnNldFN0ciA9IGZvcm1hdChkYXRlKS5zcGxpdChcIkdNVFwiKVsxXTtcbiAgICBpZiAob2Zmc2V0U3RyIGluIG9mZnNldENhY2hlKSByZXR1cm4gb2Zmc2V0Q2FjaGVbb2Zmc2V0U3RyXTtcbiAgICByZXR1cm4gY2FsY09mZnNldChvZmZzZXRTdHIsIG9mZnNldFN0ci5zcGxpdChcIjpcIikpO1xuICB9IGNhdGNoIHtcbiAgICAvLyBGYWxsYmFjayB0byBtYW51YWwgcGFyc2luZyBpZiB0aGUgcnVudGltZSBkb2Vzbid0IHN1cHBvcnQgwrFISDpNTS/CsUhITU0vwrFISFxuICAgIC8vIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL25vZGVqcy9ub2RlL2lzc3Vlcy81MzQxOVxuICAgIGlmICh0aW1lWm9uZSBpbiBvZmZzZXRDYWNoZSkgcmV0dXJuIG9mZnNldENhY2hlW3RpbWVab25lXTtcbiAgICBjb25zdCBjYXB0dXJlcyA9IHRpbWVab25lPy5tYXRjaChvZmZzZXRSZSk7XG4gICAgaWYgKGNhcHR1cmVzKSByZXR1cm4gY2FsY09mZnNldCh0aW1lWm9uZSwgY2FwdHVyZXMuc2xpY2UoMSkpO1xuICAgIHJldHVybiBOYU47XG4gIH1cbn1cbmNvbnN0IG9mZnNldFJlID0gLyhbKy1dXFxkXFxkKTo/KFxcZFxcZCk/LztcbmZ1bmN0aW9uIGNhbGNPZmZzZXQoY2FjaGVTdHIsIHZhbHVlcykge1xuICBjb25zdCBob3VycyA9ICsodmFsdWVzWzBdIHx8IDApO1xuICBjb25zdCBtaW51dGVzID0gKyh2YWx1ZXNbMV0gfHwgMCk7XG4gIC8vIENvbnZlcnQgc2Vjb25kcyB0byBtaW51dGVzIGJ5IGRpdmlkaW5nIGJ5IDYwIHRvIGtlZXAgdGhlIGZ1bmN0aW9uIHJldHVybiBpbiBtaW51dGVzLlxuICBjb25zdCBzZWNvbmRzID0gKyh2YWx1ZXNbMl0gfHwgMCkgLyA2MDtcbiAgcmV0dXJuIG9mZnNldENhY2hlW2NhY2hlU3RyXSA9IGhvdXJzICogNjAgKyBtaW51dGVzID4gMCA/IGhvdXJzICogNjAgKyBtaW51dGVzICsgc2Vjb25kcyA6IGhvdXJzICogNjAgLSBtaW51dGVzIC0gc2Vjb25kcztcbn0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@date-fns/tz/tzOffset/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@date-fns/tz/tzScan/index.js":
/*!*******************************************************!*\
  !*** ../../node_modules/@date-fns/tz/tzScan/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tzScan: () => (/* binding */ tzScan)\n/* harmony export */ });\n/* harmony import */ var _tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tzOffset/index.js */ \"(ssr)/../../node_modules/@date-fns/tz/tzOffset/index.js\");\n\n\n/**\n * Time interval.\n */\n\n/**\n * Time zone change record.\n */\n\n/**\n * The function scans the time zone for changes in the given interval.\n *\n * @param timeZone - Time zone name (IANA or UTC offset)\n * @param interval - Time interval to scan for changes\n *\n * @returns Array of time zone changes\n */\nfunction tzScan(timeZone, interval) {\n  const changes = [];\n  const monthDate = new Date(interval.start);\n  monthDate.setUTCSeconds(0, 0);\n  const endDate = new Date(interval.end);\n  endDate.setUTCSeconds(0, 0);\n  const endMonthTime = +endDate;\n  let lastOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, monthDate);\n  while (+monthDate < endMonthTime) {\n    // Month forward\n    monthDate.setUTCMonth(monthDate.getUTCMonth() + 1);\n\n    // Find the month where the offset changes\n    const offset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, monthDate);\n    if (offset != lastOffset) {\n      // Rewind a month back to find the day where the offset changes\n      const dayDate = new Date(monthDate);\n      dayDate.setUTCMonth(dayDate.getUTCMonth() - 1);\n      const endDayTime = +monthDate;\n      lastOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, dayDate);\n      while (+dayDate < endDayTime) {\n        // Day forward\n        dayDate.setUTCDate(dayDate.getUTCDate() + 1);\n\n        // Find the day where the offset changes\n        const offset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, dayDate);\n        if (offset != lastOffset) {\n          // Rewind a day back to find the time where the offset changes\n          const hourDate = new Date(dayDate);\n          hourDate.setUTCDate(hourDate.getUTCDate() - 1);\n          const endHourTime = +dayDate;\n          lastOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, hourDate);\n          while (+hourDate < endHourTime) {\n            // Hour forward\n            hourDate.setUTCHours(hourDate.getUTCHours() + 1);\n\n            // Find the hour where the offset changes\n            const hourOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, hourDate);\n            if (hourOffset !== lastOffset) {\n              changes.push({\n                date: new Date(hourDate),\n                change: hourOffset - lastOffset,\n                offset: hourOffset\n              });\n            }\n            lastOffset = hourOffset;\n          }\n        }\n        lastOffset = offset;\n      }\n    }\n    lastOffset = offset;\n  }\n  return changes;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BkYXRlLWZucy90ei90elNjYW4vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0Q7O0FBRWhEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDREQUFRO0FBQzNCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1CQUFtQiw0REFBUTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDREQUFRO0FBQzNCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHVCQUF1Qiw0REFBUTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDREQUFRO0FBQy9CO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLCtCQUErQiw0REFBUTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9uYXRlc3BpbG1hbi9SZXBvcy9FUFRTUy13ZWJzaXRlL2VwdHNzLXNpdGUvbm9kZV9tb2R1bGVzL0BkYXRlLWZucy90ei90elNjYW4vaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdHpPZmZzZXQgfSBmcm9tIFwiLi4vdHpPZmZzZXQvaW5kZXguanNcIjtcblxuLyoqXG4gKiBUaW1lIGludGVydmFsLlxuICovXG5cbi8qKlxuICogVGltZSB6b25lIGNoYW5nZSByZWNvcmQuXG4gKi9cblxuLyoqXG4gKiBUaGUgZnVuY3Rpb24gc2NhbnMgdGhlIHRpbWUgem9uZSBmb3IgY2hhbmdlcyBpbiB0aGUgZ2l2ZW4gaW50ZXJ2YWwuXG4gKlxuICogQHBhcmFtIHRpbWVab25lIC0gVGltZSB6b25lIG5hbWUgKElBTkEgb3IgVVRDIG9mZnNldClcbiAqIEBwYXJhbSBpbnRlcnZhbCAtIFRpbWUgaW50ZXJ2YWwgdG8gc2NhbiBmb3IgY2hhbmdlc1xuICpcbiAqIEByZXR1cm5zIEFycmF5IG9mIHRpbWUgem9uZSBjaGFuZ2VzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0elNjYW4odGltZVpvbmUsIGludGVydmFsKSB7XG4gIGNvbnN0IGNoYW5nZXMgPSBbXTtcbiAgY29uc3QgbW9udGhEYXRlID0gbmV3IERhdGUoaW50ZXJ2YWwuc3RhcnQpO1xuICBtb250aERhdGUuc2V0VVRDU2Vjb25kcygwLCAwKTtcbiAgY29uc3QgZW5kRGF0ZSA9IG5ldyBEYXRlKGludGVydmFsLmVuZCk7XG4gIGVuZERhdGUuc2V0VVRDU2Vjb25kcygwLCAwKTtcbiAgY29uc3QgZW5kTW9udGhUaW1lID0gK2VuZERhdGU7XG4gIGxldCBsYXN0T2Zmc2V0ID0gdHpPZmZzZXQodGltZVpvbmUsIG1vbnRoRGF0ZSk7XG4gIHdoaWxlICgrbW9udGhEYXRlIDwgZW5kTW9udGhUaW1lKSB7XG4gICAgLy8gTW9udGggZm9yd2FyZFxuICAgIG1vbnRoRGF0ZS5zZXRVVENNb250aChtb250aERhdGUuZ2V0VVRDTW9udGgoKSArIDEpO1xuXG4gICAgLy8gRmluZCB0aGUgbW9udGggd2hlcmUgdGhlIG9mZnNldCBjaGFuZ2VzXG4gICAgY29uc3Qgb2Zmc2V0ID0gdHpPZmZzZXQodGltZVpvbmUsIG1vbnRoRGF0ZSk7XG4gICAgaWYgKG9mZnNldCAhPSBsYXN0T2Zmc2V0KSB7XG4gICAgICAvLyBSZXdpbmQgYSBtb250aCBiYWNrIHRvIGZpbmQgdGhlIGRheSB3aGVyZSB0aGUgb2Zmc2V0IGNoYW5nZXNcbiAgICAgIGNvbnN0IGRheURhdGUgPSBuZXcgRGF0ZShtb250aERhdGUpO1xuICAgICAgZGF5RGF0ZS5zZXRVVENNb250aChkYXlEYXRlLmdldFVUQ01vbnRoKCkgLSAxKTtcbiAgICAgIGNvbnN0IGVuZERheVRpbWUgPSArbW9udGhEYXRlO1xuICAgICAgbGFzdE9mZnNldCA9IHR6T2Zmc2V0KHRpbWVab25lLCBkYXlEYXRlKTtcbiAgICAgIHdoaWxlICgrZGF5RGF0ZSA8IGVuZERheVRpbWUpIHtcbiAgICAgICAgLy8gRGF5IGZvcndhcmRcbiAgICAgICAgZGF5RGF0ZS5zZXRVVENEYXRlKGRheURhdGUuZ2V0VVRDRGF0ZSgpICsgMSk7XG5cbiAgICAgICAgLy8gRmluZCB0aGUgZGF5IHdoZXJlIHRoZSBvZmZzZXQgY2hhbmdlc1xuICAgICAgICBjb25zdCBvZmZzZXQgPSB0ek9mZnNldCh0aW1lWm9uZSwgZGF5RGF0ZSk7XG4gICAgICAgIGlmIChvZmZzZXQgIT0gbGFzdE9mZnNldCkge1xuICAgICAgICAgIC8vIFJld2luZCBhIGRheSBiYWNrIHRvIGZpbmQgdGhlIHRpbWUgd2hlcmUgdGhlIG9mZnNldCBjaGFuZ2VzXG4gICAgICAgICAgY29uc3QgaG91ckRhdGUgPSBuZXcgRGF0ZShkYXlEYXRlKTtcbiAgICAgICAgICBob3VyRGF0ZS5zZXRVVENEYXRlKGhvdXJEYXRlLmdldFVUQ0RhdGUoKSAtIDEpO1xuICAgICAgICAgIGNvbnN0IGVuZEhvdXJUaW1lID0gK2RheURhdGU7XG4gICAgICAgICAgbGFzdE9mZnNldCA9IHR6T2Zmc2V0KHRpbWVab25lLCBob3VyRGF0ZSk7XG4gICAgICAgICAgd2hpbGUgKCtob3VyRGF0ZSA8IGVuZEhvdXJUaW1lKSB7XG4gICAgICAgICAgICAvLyBIb3VyIGZvcndhcmRcbiAgICAgICAgICAgIGhvdXJEYXRlLnNldFVUQ0hvdXJzKGhvdXJEYXRlLmdldFVUQ0hvdXJzKCkgKyAxKTtcblxuICAgICAgICAgICAgLy8gRmluZCB0aGUgaG91ciB3aGVyZSB0aGUgb2Zmc2V0IGNoYW5nZXNcbiAgICAgICAgICAgIGNvbnN0IGhvdXJPZmZzZXQgPSB0ek9mZnNldCh0aW1lWm9uZSwgaG91ckRhdGUpO1xuICAgICAgICAgICAgaWYgKGhvdXJPZmZzZXQgIT09IGxhc3RPZmZzZXQpIHtcbiAgICAgICAgICAgICAgY2hhbmdlcy5wdXNoKHtcbiAgICAgICAgICAgICAgICBkYXRlOiBuZXcgRGF0ZShob3VyRGF0ZSksXG4gICAgICAgICAgICAgICAgY2hhbmdlOiBob3VyT2Zmc2V0IC0gbGFzdE9mZnNldCxcbiAgICAgICAgICAgICAgICBvZmZzZXQ6IGhvdXJPZmZzZXRcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsYXN0T2Zmc2V0ID0gaG91ck9mZnNldDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgbGFzdE9mZnNldCA9IG9mZnNldDtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdE9mZnNldCA9IG9mZnNldDtcbiAgfVxuICByZXR1cm4gY2hhbmdlcztcbn0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@date-fns/tz/tzScan/index.js\n");

/***/ })

};
;