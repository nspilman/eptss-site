// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin" | "/admin/[slug]" | "/auth/password" | "/blog" | "/blog/[slug]" | "/callback" | "/dashboard" | "/faq" | "/feedback" | "/health" | "/home" | "/login" | "/privacy-policy" | "/profile" | "/reporting" | "/round/[slug]" | "/rounds" | "/sign-up" | "/sign-up/[slug]" | "/submit" | "/submit/[roundId]" | "/terms-of-service" | "/voting" | "/voting/[slug]" | "/waitlist"
type AppRouteHandlerRoutes = "/api/cron/assign-round-song" | "/api/cron/create-future-rounds" | "/api/cron/send-reminder-emails" | "/api/profile/update" | "/api/round-info" | "/api/round/current" | "/api/rounds" | "/api/test-report" | "/auth/callback" | "/auth/create-user" | "/auth/google/callback"
type PageRoutes = never
type LayoutRoutes = "/" | "/auth"
type RedirectRoutes = "/signup"
type RewriteRoutes = "/ingest/[[...path]]" | "/ingest/static/[[...path]]"
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin": {}
  "/admin/[slug]": { "slug": string; }
  "/api/cron/assign-round-song": {}
  "/api/cron/create-future-rounds": {}
  "/api/cron/send-reminder-emails": {}
  "/api/profile/update": {}
  "/api/round-info": {}
  "/api/round/current": {}
  "/api/rounds": {}
  "/api/test-report": {}
  "/auth": {}
  "/auth/callback": {}
  "/auth/create-user": {}
  "/auth/google/callback": {}
  "/auth/password": {}
  "/blog": {}
  "/blog/[slug]": { "slug": string; }
  "/callback": {}
  "/dashboard": {}
  "/faq": {}
  "/feedback": {}
  "/health": {}
  "/home": {}
  "/ingest/[[...path]]": { "path"?: string[]; }
  "/ingest/static/[[...path]]": { "path"?: string[]; }
  "/login": {}
  "/privacy-policy": {}
  "/profile": {}
  "/reporting": {}
  "/round/[slug]": { "slug": string; }
  "/rounds": {}
  "/sign-up": {}
  "/sign-up/[slug]": { "slug": string; }
  "/signup": {}
  "/submit": {}
  "/submit/[roundId]": { "roundId": string; }
  "/terms-of-service": {}
  "/voting": {}
  "/voting/[slug]": { "slug": string; }
  "/waitlist": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/auth": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
