name: Auth Monitoring

on:
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours
  workflow_dispatch:  # Allow manual trigger

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      start_time: ${{ env.start_time }}
      cypress_exit_code: ${{ env.cypress_exit_code }}
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      GMAIL_USER_EMAIL: ${{ secrets.GMAIL_USER_EMAIL }}
      GMAIL_CLIENT_ID: ${{ secrets.GMAIL_CLIENT_ID }}
      GMAIL_CLIENT_SECRET: ${{ secrets.GMAIL_CLIENT_SECRET }}
      GMAIL_REFRESH_TOKEN: ${{ secrets.GMAIL_REFRESH_TOKEN }}
      ENVIRONMENT: 'production'
      CYPRESS_ENVIRONMENT: 'production'
      DEBUG: cypress:server:request,cypress:server:response,cypress:*:error  # Only show request/response and errors

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm install

      - name: Run Cypress tests
        id: cypress
        continue-on-error: true
        env:
          CYPRESS_GMAIL_USER_EMAIL: ${{ secrets.GMAIL_USER_EMAIL }}
          CYPRESS_GMAIL_CLIENT_ID: ${{ secrets.GMAIL_CLIENT_ID }}
          CYPRESS_GMAIL_CLIENT_SECRET: ${{ secrets.GMAIL_CLIENT_SECRET }}
          CYPRESS_GMAIL_REFRESH_TOKEN: ${{ secrets.GMAIL_REFRESH_TOKEN }}
          CYPRESS_DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          # Record start time in nanoseconds
          start_time=$(date +%s%N)
          echo "start_time=$start_time" >> $GITHUB_ENV
          
          mkdir -p cypress/logs
          # Show all console output and test results
          npm run cypress:production 2>&1 | tee cypress/logs/test-run.log
          
          # Record end time and calculate duration in milliseconds
          end_time=$(date +%s%N)
          duration=$(( ($end_time - $start_time) / 1000000 )) # Convert nanoseconds to milliseconds
          echo "duration=$duration" >> $GITHUB_ENV
          
          # Store the exit code
          echo "cypress_exit_code=$?" >> $GITHUB_ENV

      - name: Upload test logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cypress-logs
          path: |
            cypress/logs/

      - name: Upload test screenshots and videos
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cypress-screenshots-and-videos
          path: |
            cypress/screenshots/
            cypress/videos/

  report-results:
    needs: test
    uses: ./.github/workflows/test-reporter.yml
    with:
      test-name: 'Auth Monitoring Test'
      environment: 'production'
      start-time: ${{ needs.test.outputs.start_time }}
      exit-code: ${{ needs.test.outputs.cypress_exit_code }}
